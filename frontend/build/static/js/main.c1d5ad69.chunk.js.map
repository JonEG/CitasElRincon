{"version":3,"sources":["images/profile-picture.jpg","logo.svg","controllers/authController.js","modules/nav.js","http-common.js","services/professional.service.js","services/department.service.js","services/tutor.service.js","services/role.service.js","modules/createProfile.js","services/image.service.js","modules/editProfile.js","modules/signin.js","modules/createTimetable.js","modules/protected.route.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","this","authenticate","sessionStorage","getItem","cb","navComponent","props","state","redirect","console","log","to","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","controlSignOut","authController","isAuthenticated","clientId","buttonText","onLogoutSuccess","logout","setState","tabindex","aria-disabled","React","Component","axios","create","baseURL","headers","http","get","correo","post","data","onUploadProgress","progressEvent","Math","round","loaded","total","put","delete","profileComponent","formatImage","value","target","files","departments","roles","tutors","name","departmentId","roleId","email","tutorId","comment","image","queryDepartments","queryRoles","queryTutors","DepartmentService","getAll","then","res","success","alert","catch","err","RoleService","TutorService","src","onChange","placeholder","autofocus","selected","disabled","loadDepartments","loadRoles","loadTutors","rows","onClick","addProfessional","require","ref","profilePicture","myProfilePicture","alt","style","marginTop","width","myElement","myFileElement","className","readURL","for","map","input","reader","FileReader","myValue","includes","onload","event","$","attr","result","readAsDataURL","Swal","fire","position","icon","title","showConfirmButton","timer","emptyFields","count","replace","length","validateFields","datapost","JSON","stringify","ProfessionalService","error","imageId","queryProfessionals","getWithEmail","ImageService","cargarImagen","updateProfessional","miImagen","onloadend","a","imagenDeBBDD","update","signinComponent","response","profileObj","imageUrl","onSuccess","responseGoogle","login","onFailure","cookiePolicy","homeComponent","jQuery","datetimepicker","ProtectedRoute","component","rest","render","auth","pathname","from","location","App","exact","path","CreateProfile","EditProfile","CreateTimeTable","Signin","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c1d5ad69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-picture.d3e74ac7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","class Auth {\n    constructor() {\n      this.authenticate = sessionStorage.getItem(\"authenticatedUser\");\n    }\n  \n    login(cb) {\n      sessionStorage[\"authenticatedUser\"]=true;\n      this.authenticate = sessionStorage.getItem(\"authenticatedUser\");\n      cb();\n      //console.trace();\n    }\n  \n    logout(cb) {\n      sessionStorage[\"authenticatedUser\"]=false;\n      this.authenticate = sessionStorage.getItem(\"authenticatedUser\");\n      cb();\n      //console.trace();\n    }\n  \n    isAuthenticated() {\n      return this.authenticate;\n    }\n  }\n  \n  export default new Auth();","import React from 'react';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../../node_modules/bootstrap/dist/js/bootstrap.bundle.min';\nimport { GoogleLogout } from 'react-google-login';\nimport authController from '../controllers/authController';\nimport { Redirect } from \"react-router-dom\";\n\nclass navComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: null\n    };\n  }\n\n  render() {\n    if (this.state.redirect) {\n      console.log(\"BARRA NAV, REDIRECTED\");\n      return <Redirect to={this.state.redirect} />\n    }\n    return (\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a class=\"navbar-brand\" href=\"#\">IES EL RINCON</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul class=\"navbar-nav\">\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\" href=\"/\">Home <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\" href=\"/list\">Ver Empleados </a>\n            </li>\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\" href=\"/add\">Añadir</a>\n            </li>\n            {this.controlSignOut()}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n\n  controlSignOut() {\n    if (authController.isAuthenticated()==\"true\") {\n      return (\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item active\">\n            <GoogleLogout\n              clientId=\"820637070016-genrk31ge28bjg97du1q9bkvsa0p6bdq.apps.googleusercontent.com\"\n              buttonText=\"Salir\"\n              onLogoutSuccess={() => {\n                authController.logout(() =>\n                  this.setState({ redirect: \"/signin\" })\n                );\n              }}\n            ></GoogleLogout>\n          </li>\n          <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">{sessionStorage.getItem(\"userName\")}</a>\n        </ul>\n      );\n    }\n  }\n}\n\nexport default navComponent;\n\n\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://192.168.1.122:8000\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nclass ProfessionalDataService {\n  getAll() {\n    return http.get(\"/professional/list\");\n  }\n\n  get(id) {\n    return http.get(`/professional/${id}`);\n  }\n\n  getWithEmail(correo){\n    return http.post('/professional-email', correo);\n  }\n\n  create(data) {\n    return http.post(\"/professional/\", data, {\n      onUploadProgress: progressEvent => {\n        console.log(\"Subida de foto: \"+Math.round(progressEvent.loaded*100/progressEvent.total)+\"%\");\n      }\n    });\n  }\n\n  update(data) {\n    return http.put(`/professional/`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/professional/${id}`);\n  }\n}\n\nexport default new ProfessionalDataService();","import http from \"../http-common\";\n\nclass DepartmentDataService {\n\n  getAll() {\n    return http.get(\"/department/list\");\n  }\n\n  get(id) {\n    return http.get(`/department/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/department/\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/department/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/department/${id}`);\n  }\n}\n\nexport default new DepartmentDataService();","import http from \"../http-common\";\n\nclass TutorDataService {\n\n  getAll() {\n    return http.get(\"/tutor/list\");\n  }\n\n  get(id) {\n    return http.get(`/tutor/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/tutor/\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/tutor/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/tutor/${id}`);\n  }\n}\n\nexport default new TutorDataService();","import http from \"../http-common\";\n\nclass RoleDataService {\n\n  getAll() {\n    return http.get(\"/role/list\");\n  }\n\n  get(id) {\n    return http.get(`/role/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/role/\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/role/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/role/${id}`);\n  }\n}\n\nexport default new RoleDataService();","import React from 'react';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../../node_modules/bootstrap/dist/js/bootstrap.bundle.min';\n\nimport ProfessionalService from '../services/professional.service';\nimport DepartmentService from '../services/department.service';\nimport TutorService from '../services/tutor.service';\nimport RoleService from '../services/role.service';\n\nimport Swal from 'sweetalert2';\nimport $ from 'jquery';\n\nclass profileComponent extends React.Component {\n\n    formatImage = (value) => {\n        console.log(value.target.files[0]);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            departments: [],\n            roles: [],\n            tutors: [],\n            name: sessionStorage.getItem(\"userName\"),\n            departmentId: null,\n            roleId: null,\n            email: sessionStorage.getItem(\"userEmail\"),\n            tutorId: null,\n            comment: \"\",\n            image: null\n        };\n    }\n\n    componentDidMount() {\n        this.queryDepartments();\n        this.queryRoles();\n        this.queryTutors();\n    }\n\n    queryDepartments() {\n        DepartmentService.getAll()\n            .then(res => {\n\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.setState({ departments: data });\n                } else {\n                    alert('Error web service');\n                }\n            })\n            .catch(err => {\n                alert('ERROR server' + err);\n            });\n    }\n\n    queryRoles() {\n        RoleService.getAll()\n            .then(res => {\n\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.setState({ roles: data });\n                } else {\n                    alert('Error web service');\n                }\n            })\n            .catch(err => {\n                alert('ERROR server' + err);\n            });\n    }\n\n    queryTutors() {\n        TutorService.getAll()\n            .then(res => {\n\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.setState({ tutors: data });\n                } else {\n                    alert('Error web service');\n                }\n            })\n            .catch(err => {\n                alert('ERROR server' + err);\n            });\n    }\n\n    render() {\n        return (\n            <div class=\"container p-4\">\n                <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\n                <div class=\"row\">\n                    <div class=\"col-lg-9\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"form-group \">\n                                    <input type=\"text\"\n                                        value={this.state.name}\n                                        onChange={(value) => this.setState({ name: value.target.value })}\n                                        class=\"form-control\" name=\"nombre\" placeholder=\"Nombre\" autofocus\n                                    />\n                                </div>\n\n                                <div class=\"row\">\n                                    <div class=\"col-lg-3\">\n                                        <div class=\"form-group\">\n                                            <select class=\"form-control\"\n                                                onChange={(value) => this.setState({ departmentId: value.target.value })} >\n                                                <option selected disabled>Departamento</option>\n                                                {this.loadDepartments()}\n\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-lg-2\">\n                                        <div class=\"form-group\">\n                                            <select class=\"form-control\"\n                                                onChange={(value) => this.setState({ roleId: value.target.value })} >\n                                                <option selected disabled >Rol</option>\n                                                {this.loadRoles()}\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-lg-3\">\n                                        <div class=\"form-group\">\n                                            <select class=\"form-control\"\n                                                onChange={(value) => this.setState({ tutorId: value.target.value })} >\n                                                <option selected disabled >Tutoría</option>\n                                                {this.loadTutors()}\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <textarea class=\"form-control\"\n                                        onChange={(value) => this.setState({ comment: value.target.value })}\n                                        placeholder=\"Introduzca si lo desea algún comentario: Me gusta J\"\n                                        rows=\"3\"></textarea>\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <button type=\"submit\" class=\"btn btn-success\" onClick={() => this.addProfessional()}>Añadir</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-lg-3\">\n                        <div class=\"card\">\n                            <div class=\"card-body text-center\">\n                                <form class=\"md-form\">\n                                    <div class=\"file-field\">\n                                        <div class=\"md-4\" >\n                                            <img src={require(\"../images/profile-picture.jpg\")}\n                                                ref={profilePicture => this.myProfilePicture = profilePicture}\n                                                id=\"blah\"\n                                                class=\"rounded-circle z-depth-1-half avatar-pic img-fluid img-thumbnail\" alt=\"avatar\"\n                                            />\n\n                                            <div style={{marginTop:\"10px\"}} class=\"d-flex\" >\n                                                <div class=\"btn btn-mdb-color btn-rounded float-left custom-file\">\n                                                    <input style={{width:\"100%\"}}ref={(myElement) => this.myFileElement = myElement}\n                                                        type=\"file\"\n                                                        id=\"imgInput\"\n                                                        className=\"custom-file-input btn btn-primary\"\n                                                        onChange={(value) => { this.readURL(value.target) }}\n                                                    />\n                                                    <label class=\"custom-file-label\" for=\"customFile\">Perfil</label>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n    loadDepartments() {\n        return this.state.departments.map(data => {\n            if (data) {\n                return (\n                    <option value={data.id}>{data.name}</option>\n                );\n            } else {\n                return <div></div>;\n            }\n        });\n    }\n\n    loadRoles() {\n        return this.state.roles.map(data => {\n            if (data) {\n                return (\n                    <option value={data.id}>{data.name}</option>\n                );\n            } else {\n                return <div></div>;\n            }\n        });\n    }\n\n    loadTutors() {\n        return this.state.tutors.map(data => {\n            if (data) {\n                return (\n                    <option value={data.id}>{data.name}</option>\n                );\n            } else {\n                return <div></div>;\n            }\n        });\n    }\n\n    readURL(input) {\n        if (input.files && input.files[0]) {\n            var reader = new FileReader();\n\n            const myValue = input.files[0];\n\n            if (myValue.type.includes(\"image\")) {\n                reader.onload = (event) => $('#blah').attr('src', event.target.result);\n\n                reader.readAsDataURL(myValue); // convert to base64 string\n\n                this.state.image = {\n                    name: myValue.name,\n                    type: myValue.type,\n                    data: myValue\n                }\n            } else {\n                Swal.fire({\n                    position: 'top',\n                    icon: 'error',\n                    title: 'Sólo archivos de tipo imagen!',\n                    showConfirmButton: false,\n                    timer: 2000\n                })\n            }\n\n\n        }\n    }\n\n    validateFields(){\n        let emptyFields = \"\";\n        let count = 0;\n        const nombre = this.state.name;\n        \n        if(nombre.replace(/\\s/g, \"\").length==0){\n            emptyFields+=\" Nombre \";\n            count++;\n        }\n        if(this.state.departmentId==null){\n            emptyFields+=\" Departamento \";\n            count++;\n        }\n        if(this.state.roleId==null){\n            emptyFields+=\" Rol \";\n            count++;\n        }\n\n        //If there are errors\n        if(count>0){\n            Swal.fire({\n                position: 'center',\n                icon: 'error',\n                title: (count==1?\"Falta el campo\":\"Faltan los campos: \")+emptyFields,\n                showConfirmButton: false,\n                timer: 2000\n            })\n            return false;\n        }else{\n            return true;\n        }\n        \n    }\n\n    addProfessional() {\n        if(this.validateFields()==false){\n            return;\n        }\n\n        // parametros de datos post\n        const datapost = {\n            name: this.state.name,\n            departmentId: this.state.departmentId,\n            roleId: this.state.roleId,\n            email: this.state.email,\n            tutorId: this.state.tutorId,\n            comment: this.state.comment,\n            image: this.state.image\n        }\n        alert(JSON.stringify(datapost));\n\n        ProfessionalService.create(datapost)\n            .then(res => {\n                if (res.data.success) {\n                    //alert(res.data.message);\n                    Swal.fire({\n                        position: 'top',\n                        icon: 'success',\n                        title: 'Profesional añadido correctamente!',\n                        showConfirmButton: false,\n                        timer: 2000\n                    })\n                    //this.props.history.push('/list'); \n                }\n                else {\n                    alert(\"Error\");\n                }\n            }).catch(error => {\n                alert(\"Error 34 \" + error);\n            });\n    }\n}\n\n\n\nexport default profileComponent;","import http from \"../http-common\";\n\nclass ImageDataService {\n\n  getAll() {\n    return http.get(\"/image/list\");\n  }\n\n  get(id) {\n    return http.get(`/image/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/image/\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/image/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/image/${id}`);\n  }\n}\n\nexport default new ImageDataService();","import React from 'react';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../../node_modules/bootstrap/dist/js/bootstrap.bundle.min';\n\nimport ProfessionalService from '../services/professional.service';\nimport DepartmentService from '../services/department.service';\nimport TutorService from '../services/tutor.service';\nimport RoleService from '../services/role.service';\nimport ImageService from '../services/image.service';\nimport Swal from 'sweetalert2';\nimport $ from 'jquery';\n\n\nclass profileComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            departments: [],\n            roles: [],\n            tutors: [],\n            id: null,\n            name: null,\n            departmentId: null,\n            roleId: null,\n            email: sessionStorage.getItem(\"userEmail\"),\n            tutorId: null,\n            comment: \"\",\n            image: null,\n            imageId: null\n        };\n    }\n\n    componentDidMount() {\n        //Professional info\n        this.queryProfessionals();\n        //Dropdowns\n        this.queryDepartments();\n        this.queryRoles();\n        this.queryTutors();\n    }\n\n    queryProfessionals() {\n        ProfessionalService.getWithEmail({ email: this.state.email })\n            .then(res => {\n                if (res.data.success) {\n                    const { id, name, departmentId, roleId, tutorId, comment, imageId } = res.data.data[0];\n\n                    this.setState({\n                        id: id,\n                        name: name,\n                        departmentId: departmentId,\n                        roleId: roleId,\n                        tutorId: tutorId,\n                        comment: comment,\n                        imageId: imageId\n                    });\n\n                    if (imageId != null) {\n                        ImageService.get(imageId).then(res => {\n                            this.setState({ image: res.data.data[0] });\n                            //console.log(\"MI IMAGEN \"+JSON.stringify(this.state.image));\n                            this.cargarImagen(this.state.image);\n\n                        }).catch(err => {\n                            console.log('ERROR server ' + err);\n                        });\n                    } else {\n                        console.log('No hay imagen asociada a esta cuenta.');\n\n                    }\n                    //this.setState(id,name,departmentId,roleId,tutorId,comment,imageId);\n                } else {\n                    console.log('Error quering professional EDIT');\n                }\n            })\n            .catch(err => {\n                console.log('ERROR server' + err);\n            });\n    }\n\n    queryDepartments() {\n        DepartmentService.getAll()\n            .then(res => {\n\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.setState({ departments: data });\n                } else {\n                    console.log('Error quering departments EDIT');\n                }\n            })\n            .catch(err => {\n                console.log('ERROR server' + err);\n            });\n    }\n\n    queryRoles() {\n        RoleService.getAll()\n            .then(res => {\n\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.setState({ roles: data });\n                } else {\n                    console.log('Error quering roles EDIT');\n                }\n            })\n            .catch(err => {\n                console.log('ERROR server' + err);\n            });\n    }\n\n    queryTutors() {\n        TutorService.getAll()\n            .then(res => {\n\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.setState({ tutors: data });\n                } else {\n                    console.log('Error quering tutors EDIT');\n                }\n            })\n            .catch(err => {\n                console.log('ERROR server' + err);\n            });\n    }\n\n    render() {\n        return (\n            <div class=\"container p-4\">\n                <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\n                <div class=\"row\">\n                    <div class=\"col-lg-9\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"form-group \">\n                                    <input type=\"text\"\n                                        value={this.state.name}\n                                        onChange={(value) => this.setState({ name: value.target.value })}\n                                        class=\"form-control\" name=\"nombre\" placeholder=\"Nombre\" autofocus\n                                    />\n                                </div>\n\n                                <div class=\"row\">\n                                    <div class=\"col-lg-3\">\n                                        <div class=\"form-group\">\n                                            <select class=\"form-control\"\n                                                value={this.state.departmentId}\n                                                onChange={(value) => this.setState({ departmentId: value.target.value })} >\n                                                <option selected disabled>Departamento</option>\n                                                {this.loadDepartments()}\n\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-lg-2\">\n                                        <div class=\"form-group\">\n                                            <select class=\"form-control\"\n                                                value={this.state.roleId}\n                                                onChange={(value) => this.setState({ roleId: value.target.value })} >\n                                                <option selected disabled >Rol</option>\n                                                {this.loadRoles()}\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-lg-3\">\n                                        <div class=\"form-group\">\n                                            <select class=\"form-control\"\n                                                value={this.state.tutorId}\n                                                onChange={(value) => this.setState({ tutorId: value.target.value })} >\n                                                <option selected disabled >Tutoría</option>\n                                                {this.loadTutors()}\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <textarea class=\"form-control\"\n                                        value={this.state.comment}\n                                        onChange={(value) => this.setState({ comment: value.target.value })}\n                                        placeholder=\"Introduzca si lo desea algún comentario: Me gusta J\"\n                                        rows=\"3\"></textarea>\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <button type=\"submit\" class=\"btn btn-success\" onClick={() => this.updateProfessional()}>Actualizar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-lg-3\">\n                        <div class=\"card\">\n                            <div class=\"card-body text-center\">\n                                <form class=\"md-form\">\n                                    <div class=\"file-field\">\n                                        <div class=\"md-4\" >\n                                            <img src={require(\"../images/profile-picture.jpg\")}\n                                                ref={profilePicture => this.myProfilePicture = profilePicture}\n                                                id=\"blah\"\n                                                class=\"rounded-circle z-depth-1-half avatar-pic img-fluid img-thumbnail\" alt=\"avatar\"\n                                            />\n\n                                            <div style={{ marginTop: \"10px\" }} class=\"d-flex\" >\n                                                <div class=\"btn btn-mdb-color btn-rounded float-left custom-file\">\n                                                    <input style={{ width: \"100%\" }} ref={(myElement) => this.myFileElement = myElement}\n                                                        type=\"file\"\n                                                        id=\"imgInput\"\n                                                        className=\"custom-file-input btn btn-primary\"\n                                                        onChange={(value) => { this.readURL(value.target) }}\n                                                    />\n                                                    <label class=\"custom-file-label\" for=\"customFile\">Perfil</label>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n    loadDepartments() {\n        return this.state.departments.map(data => {\n            if (data) {\n                return (\n                    <option value={data.id}>{data.name}</option>\n                );\n            } else {\n                return <div></div>;\n            }\n        });\n    }\n\n    loadRoles() {\n        return this.state.roles.map(data => {\n            if (data) {\n                return (\n                    <option value={data.id}>{data.name}</option>\n                );\n            } else {\n                return <div></div>;\n            }\n        });\n    }\n\n    loadTutors() {\n        return this.state.tutors.map(data => {\n            if (data) {\n                return (\n                    <option value={data.id}>{data.name}</option>\n                );\n            } else {\n                return <div></div>;\n            }\n        });\n    }\n\n    readURL(input) {\n        if (input.files && input.files[0]) {\n            const myValue = input.files[0];\n\n            console.log('antes de cargar');\n            console.log(myValue);\n\n            if (myValue.type.includes(\"image\")) {\n                const reader = new FileReader();\n                let miImagen = {\n                    name: myValue.name,\n                    type: myValue.type\n                }\n\n                reader.onload = (event) => {\n                    console.log(\"imagen ya lista para cargar exitosamente\");\n                    console.log(event.target.result);\n                    $('#blah').attr('src', event.target.result);\n                }\n                reader.readAsDataURL(myValue); // convert to base64 string, al finalizar llama a onloadend\n                reader.onloadend = async () => {\n                    //IMAGEN EN BASE 64 = reader.result\n                    miImagen.data = await reader.result;\n                    this.state.image = miImagen;\n                    console.log(\"imagen pasada a base 64\");\n                    console.log(this.state.image.data);\n                }\n            } else {\n                Swal.fire({\n                    position: 'top',\n                    icon: 'error',\n                    title: 'Sólo archivos de tipo imagen!',\n                    showConfirmButton: false,\n                    timer: 2000\n                })\n            }\n        }\n    }\n\n    cargarImagen(imagenDeBBDD) {\n        if (imagenDeBBDD.type.includes(\"image\")) {\n            //CONSEGUIR IMAGEN\n            console.log(\"imagen traida de bbdd\");\n            console.log(imagenDeBBDD);\n            \n            //EN LA BBDD GUARDO COD BASE 64 pero me devuelve un buffered array :(\n            \n            //const blob = new Blob([imagenDeBBDD.data.data], { type: \"image/jpeg\" });\n            //console.log(\"imagen en formato blob\");\n            //console.log(blob);\n\n            //CARGAR IMAGEN\n            const imagenListaParaLeer = \"\";\n            //$('#blah').attr('src', imagenListaParaLeer);\n        } else {\n            Swal.fire({\n                position: 'top',\n                icon: 'error',\n                title: 'Sólo archivos de tipo imagen!',\n                showConfirmButton: false,\n                timer: 2000\n            })\n        }\n    }\n\n    validateFields() {\n        let emptyFields = \"\";\n        let count = 0;\n        const nombre = this.state.name;\n\n        if (nombre.replace(/\\s/g, \"\").length == 0) {\n            emptyFields += \" Nombre \";\n            count++;\n        }\n        if (this.state.departmentId == null) {\n            emptyFields += \" Departamento \";\n            count++;\n        }\n        if (this.state.roleId == null) {\n            emptyFields += \" Rol \";\n            count++;\n        }\n\n        //If there are errors\n        if (count > 0) {\n            Swal.fire({\n                position: 'center',\n                icon: 'error',\n                title: (count == 1 ? \"Falta el campo\" : \"Faltan los campos: \") + emptyFields,\n                showConfirmButton: false,\n                timer: 2000\n            })\n            return false;\n        } else {\n            return true;\n        }\n\n    }\n\n    updateProfessional() {\n        if (this.validateFields() == false) {\n            return;\n        }\n\n        // parametros de datos post\n        const datapost = {\n            id: this.state.id,\n            name: this.state.name,\n            departmentId: this.state.departmentId,\n            roleId: this.state.roleId,\n            email: this.state.email,\n            tutorId: this.state.tutorId,\n            comment: this.state.comment,\n            image: this.state.image,\n            imageId: this.state.imageId\n        }\n        console.log(\"imagen introducida en bbdd\");\n        console.log(datapost.image);\n        console.log(JSON.stringify(datapost));\n\n        ProfessionalService.update(datapost)\n            .then(res => {\n                if (res.data.success) {\n                    //alert(res.data.message);\n                    Swal.fire({\n                        position: 'top',\n                        icon: 'success',\n                        title: 'Profesional actualizado correctamente!',\n                        showConfirmButton: false,\n                        timer: 2000\n                    })\n                    //this.props.history.push('/list'); \n                }\n                else {\n                    alert(\"Error\");\n                }\n            }).catch(error => {\n                alert(\"Error 34 \" + error);\n            });\n    }\n}\n\n\n\nexport default profileComponent;","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport ReactDOM from 'react-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport { Redirect } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\nimport authController from '../controllers/authController';\n\nclass signinComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: null\n        };\n    }\n\n    responseGoogle (response) {\n        console.log(response);\n        sessionStorage[\"userName\"] = response.profileObj.name;\n        sessionStorage[\"userEmail\"] = response.profileObj.email;\n        sessionStorage[\"userUrl\"] = response.profileObj.imageUrl;\n        console.log(`CAMPOS: ${sessionStorage.getItem(\"userName\")}`);\n    }\n    \n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={this.state.redirect} />\n        }\n        return (\n            <div class=\"container p-4\">\n                <div class=\"row\">\n                    <div class=\"col-md-4 mx-auto\">\n                        <div class=\"card text-center\">\n                            <div class=\"card-header\">\n                                <h1>Iniciar Sesión</h1>\n                            </div>\n                            <div class=\"card-body\">\n                                {\n                                <GoogleLogin\n                                    clientId=\"820637070016-genrk31ge28bjg97du1q9bkvsa0p6bdq.apps.googleusercontent.com\"\n                                    buttonText=\"Iniciar sesion\"\n                                    onSuccess={ (res) => {\n                                        this.responseGoogle(res);\n                                        authController.login(()=>\n                                            this.setState({redirect: \"/crear-perfil\"})\n                                        );\n                                    }}\n                                \n                                    onFailure={ () => console.log('error crack')}\n                                    cookiePolicy={'single_host_origin'}\n                                />}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n    showLogInError(){\n        if(!sessionStorage.getItem(\"userEmail\")){\n            Swal.fire({\n                position: 'center',\n                icon: 'error',\n                title: 'Error con el inicio de sesión!',\n                showConfirmButton: false,\n                timer: 2000\n            });\n        }\n        \n    }\n}\n\nexport default signinComponent;","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport jQuery from 'jquery-datetimepicker';\n\n\nclass homeComponent extends React.Component  {\n\n  \n\n  render()\n  {\n    return (\n        <div className=\"container p-4\">\n             <script>{jQuery('#datetimepicker').datetimepicker()}</script>\n            <div className=\"row\"> \n            <input id=\"datetimepicker\" type=\"text\" />\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default homeComponent;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../controllers/authController\";\n\nexport const ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (auth.isAuthenticated()===\"true\") {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/signin\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\n\nimport Nav from './modules/nav';\nimport CreateProfile from './modules/createProfile';\nimport EditProfile from './modules/editProfile';\nimport Signin from './modules/signin';\nimport CreateTimeTable from './modules/createTimetable';\nimport {ProtectedRoute} from './modules/protected.route';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n            <Nav />\n            <Switch>\n              <ProtectedRoute exact path=\"/crear-perfil\" component={CreateProfile}></ProtectedRoute>\n              <ProtectedRoute exact path=\"/editar-perfil\" component={EditProfile}></ProtectedRoute>\n              <ProtectedRoute exact path=\"/definir-horario\" component={CreateTimeTable}></ProtectedRoute>\n\n              <Route exact path=\"/signin\" component={Signin}></Route>\n              <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n            </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}