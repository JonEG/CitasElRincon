{"ast":null,"code":"import ProfessionalService from '../services/professional.service';\nimport Swal from 'sweetalert2';\n\nclass SigninController {\n  constructor() {}\n\n  responseGoogle(response) {\n    return new Promise((resolve, reject) => {\n      sessionStorage.userName = response.profileObj.name;\n      sessionStorage.userEmail = response.profileObj.email;\n      sessionStorage.userUrl = response.profileObj.imageUrl;\n      resolve(true);\n    });\n  }\n\n  async loadUserId(response) {\n    await ProfessionalService.getWithEmail({\n      email: response.profileObj.email\n    }).then(res => {\n      if (res.data.success) {\n        const {\n          id\n        } = res.data.data[0];\n        sessionStorage.userId = id;\n      } else {\n        console.error('Error loading Id');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n  }\n\n  showLogInError() {\n    if (!sessionStorage.getItem('userEmail')) {\n      Swal.fire({\n        position: 'center',\n        icon: 'error',\n        title: 'Error con el inicio de sesión!',\n        showConfirmButton: false,\n        timer: 2000\n      });\n    }\n  }\n\n}\n\nexport default new SigninController();","map":{"version":3,"sources":["/Users/trabajo/Desktop/ELRINCON/react-rincon/src/controllers/signinController.js"],"names":["ProfessionalService","Swal","SigninController","constructor","responseGoogle","response","Promise","resolve","reject","sessionStorage","userName","profileObj","name","userEmail","email","userUrl","imageUrl","loadUserId","getWithEmail","then","res","data","success","id","userId","console","error","catch","err","showLogInError","getItem","fire","position","icon","title","showConfirmButton","timer"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AACA,MAAMC,gBAAN,CAAuB;AACrBC,EAAAA,WAAW,GAAI,CAEd;;AAEDC,EAAAA,cAAc,CAAEC,QAAF,EAAY;AACxB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,MAAAA,cAAc,CAACC,QAAf,GAA0BL,QAAQ,CAACM,UAAT,CAAoBC,IAA9C;AACAH,MAAAA,cAAc,CAACI,SAAf,GAA2BR,QAAQ,CAACM,UAAT,CAAoBG,KAA/C;AACAL,MAAAA,cAAc,CAACM,OAAf,GAAyBV,QAAQ,CAACM,UAAT,CAAoBK,QAA7C;AACAT,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KALM,CAAP;AAMD;;AAED,QAAMU,UAAN,CAAkBZ,QAAlB,EAA4B;AAC1B,UAAML,mBAAmB,CAACkB,YAApB,CAAiC;AAAEJ,MAAAA,KAAK,EAAET,QAAQ,CAACM,UAAT,CAAoBG;AAA7B,KAAjC,EACHK,IADG,CACEC,GAAG,IAAI;AACX,UAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb,EAAsB;AACpB,cAAM;AAAEC,UAAAA;AAAF,YAASH,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAc,CAAd,CAAf;AACAZ,QAAAA,cAAc,CAACe,MAAf,GAAwBD,EAAxB;AACD,OAHD,MAGO;AACLE,QAAAA,OAAO,CAACC,KAAR,CAAc,kBAAd;AACD;AACF,KARG,EASHC,KATG,CASGC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,KAAR,CAAc,iBAAiBE,GAA/B;AACD,KAXG,CAAN;AAYD;;AAEDC,EAAAA,cAAc,GAAI;AAChB,QAAI,CAACpB,cAAc,CAACqB,OAAf,CAAuB,WAAvB,CAAL,EAA0C;AACxC7B,MAAAA,IAAI,CAAC8B,IAAL,CAAU;AACRC,QAAAA,QAAQ,EAAE,QADF;AAERC,QAAAA,IAAI,EAAE,OAFE;AAGRC,QAAAA,KAAK,EAAE,gCAHC;AAIRC,QAAAA,iBAAiB,EAAE,KAJX;AAKRC,QAAAA,KAAK,EAAE;AALC,OAAV;AAOD;AACF;;AAvCoB;;AA0CvB,eAAe,IAAIlC,gBAAJ,EAAf","sourcesContent":["import ProfessionalService from '../services/professional.service';\nimport Swal from 'sweetalert2';\nclass SigninController {\n  constructor () {\n\n  }\n\n  responseGoogle (response) {\n    return new Promise((resolve, reject) => {\n      sessionStorage.userName = response.profileObj.name;\n      sessionStorage.userEmail = response.profileObj.email;\n      sessionStorage.userUrl = response.profileObj.imageUrl;\n      resolve(true);\n    });\n  }\n\n  async loadUserId (response) {\n    await ProfessionalService.getWithEmail({ email: response.profileObj.email })\n      .then(res => {\n        if (res.data.success) {\n          const { id } = res.data.data[0];\n          sessionStorage.userId = id;\n        } else {\n          console.error('Error loading Id');\n        }\n      })\n      .catch(err => {\n        console.error('ERROR server' + err);\n      });\n  }\n\n  showLogInError () {\n    if (!sessionStorage.getItem('userEmail')) {\n      Swal.fire({\n        position: 'center',\n        icon: 'error',\n        title: 'Error con el inicio de sesión!',\n        showConfirmButton: false,\n        timer: 2000\n      });\n    }\n  }\n}\n\nexport default new SigninController();\n"]},"metadata":{},"sourceType":"module"}