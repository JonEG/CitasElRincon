{"ast":null,"code":"var _jsxFileName = \"/Users/trabajo/Desktop/ELRINCON/react-rincon/src/modules/signin.js\";\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { GoogleLogin } from 'react-google-login';\nimport { Redirect } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport authController from '../controllers/authController';\nimport Nav from '../components/nav';\nimport ProfessionalService from '../services/professional.service';\n\nclass signinComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: null\n    };\n  }\n\n  responseGoogle(response) {\n    sessionStorage.userName = response.profileObj.name;\n    sessionStorage.userEmail = response.profileObj.email;\n    sessionStorage.userUrl = response.profileObj.imageUrl;\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: this.state.redirect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-md-4 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }, \"Iniciar Sesi\\xF3n\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GoogleLogin, {\n      clientId: \"820637070016-genrk31ge28bjg97du1q9bkvsa0p6bdq.apps.googleusercontent.com\",\n      buttonText: \"Iniciar sesion\",\n      onSuccess: async res => {\n        this.responseGoogle(res);\n        await this.loadUserId(res);\n        authController.login(() => {//this.setState({ redirect: '/crear-perfil' });\n        });\n      },\n      onFailure: () => console.error('error crack'),\n      cookiePolicy: \"single_host_origin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    })))))));\n  }\n\n  async loadUserId(response) {\n    await ProfessionalService.getWithEmail({\n      email: response.profileObj.email\n    }).then(res => {\n      if (res.data.success) {\n        const {\n          id\n        } = res.data.data[0];\n        console.log(id);\n        sessionStorage.userId = id;\n      } else {\n        console.error('Error loading Id');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n  }\n\n  showLogInError() {\n    if (!sessionStorage.getItem('userEmail')) {\n      Swal.fire({\n        position: 'center',\n        icon: 'error',\n        title: 'Error con el inicio de sesión!',\n        showConfirmButton: false,\n        timer: 2000\n      });\n    }\n  }\n\n}\n\nexport default signinComponent;","map":{"version":3,"sources":["/Users/trabajo/Desktop/ELRINCON/react-rincon/src/modules/signin.js"],"names":["React","useState","GoogleLogin","Redirect","Swal","authController","Nav","ProfessionalService","signinComponent","Component","constructor","props","state","redirect","responseGoogle","response","sessionStorage","userName","profileObj","name","userEmail","email","userUrl","imageUrl","render","res","loadUserId","login","console","error","getWithEmail","then","data","success","id","log","userId","catch","err","showLogInError","getItem","fire","position","icon","title","showConfirmButton","timer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { GoogleLogin } from 'react-google-login';\nimport { Redirect } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport authController from '../controllers/authController';\nimport Nav from '../components/nav';\nimport ProfessionalService from '../services/professional.service';\n\nclass signinComponent extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      redirect: null\n    };\n  }\n\n  responseGoogle (response) {\n    sessionStorage.userName = response.profileObj.name;\n    sessionStorage.userEmail = response.profileObj.email;\n    sessionStorage.userUrl = response.profileObj.imageUrl;\n  }\n\n  render () {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n    return (\n      <div><Nav />\n        <div class='container p-4'>\n          <div class='row'>\n            <div class='col-md-4 mx-auto'>\n              <div class='card text-center'>\n                <div class='card-header'>\n                  <h1>Iniciar Sesión</h1>\n                </div>\n                <div class='card-body'>\n                  {\n                    <GoogleLogin\n                      clientId='820637070016-genrk31ge28bjg97du1q9bkvsa0p6bdq.apps.googleusercontent.com'\n                      buttonText='Iniciar sesion'\n                      onSuccess={async (res) => {\n                        this.responseGoogle(res);\n                        await this.loadUserId(res);\n                        authController.login(() => {\n                          //this.setState({ redirect: '/crear-perfil' });\n                        }\n                        );\n                      }}\n                      onFailure={() => console.error('error crack')}\n                      cookiePolicy='single_host_origin'\n                    />\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  async loadUserId (response) {\n    await ProfessionalService.getWithEmail({ email: response.profileObj.email })\n      .then(res => {\n        if (res.data.success) {\n          const { id } = res.data.data[0];\n          console.log(id);\n          sessionStorage.userId = id;\n        } else {\n          console.error('Error loading Id');\n        }\n      })\n      .catch(err => {\n        console.error('ERROR server' + err);\n      });\n  }\n\n  showLogInError () {\n    if (!sessionStorage.getItem('userEmail')) {\n      Swal.fire({\n        position: 'center',\n        icon: 'error',\n        title: 'Error con el inicio de sesión!',\n        showConfirmButton: false,\n        timer: 2000\n      });\n    }\n  }\n}\n\nexport default signinComponent;\n"]},"metadata":{},"sourceType":"module"}