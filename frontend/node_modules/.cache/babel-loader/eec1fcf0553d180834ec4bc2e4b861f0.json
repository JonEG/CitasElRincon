{"ast":null,"code":"var _jsxFileName = \"/Users/trabajo/Desktop/ELRINCON/react-rincon/src/controllers/profileController.js\";\nimport React, { Component } from 'react';\nimport ProfessionalService from '../services/professional.service';\nimport DepartmentService from '../services/department.service';\nimport TutorService from '../services/tutor.service';\nimport RoleService from '../services/role.service';\nimport ImageService from '../services/image.service';\nimport ProfileController from '../controllers/profileController';\nimport Swal from 'sweetalert2';\nimport { data } from 'jquery';\n\nclass profileController {\n  constructor() {\n    this.state = {\n      email: sessionStorage.getItem('userEmail'),\n      response: {},\n      departments: [],\n      roles: [],\n      tutors: [],\n      correctlyCreated: 'false'\n    };\n  }\n\n  async loadUserId() {\n    await ProfessionalService.getWithEmail({\n      email: this.state.email\n    }).then(res => {\n      console.log(res);\n\n      if (res.data.success) {\n        this.state.response = {\n          redirect: '/',\n          allowCreation: false\n        };\n      } else {\n        this.state.response = {\n          redirect: null,\n          allowCreation: true\n        };\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n    return this.state.response;\n  }\n\n  async queryProfessionals() {\n    let myState = {};\n    await ProfessionalService.getWithEmail({\n      email: this.state.email\n    }).then(async res => {\n      if (res.data.success) {\n        const {\n          id,\n          name,\n          departmentId,\n          roleId,\n          tutorId,\n          comment,\n          imageId\n        } = res.data.data[0];\n        myState = {\n          id: id,\n          name: name,\n          departmentId: departmentId,\n          roleId: roleId,\n          tutorId: tutorId,\n          comment: comment,\n          imageId: imageId\n        };\n\n        if (imageId != null) {\n          await ImageService.get(imageId).then(res => {\n            myState.image = this.cargarImagenDeBBDD(res.data.data[0]);\n          }).catch(err => {\n            console.error('ERROR server ' + err);\n          });\n        } else {\n          console.error('No hay imagen asociada a esta cuenta.');\n        }\n      } else {\n        console.error('Error quering professional EDIT');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n    return myState;\n  }\n\n  cargarImagenDeBBDD(imagenDeBBDD) {\n    let bufferOriginal = null;\n\n    if (imagenDeBBDD.type.includes('image')) {\n      // Pasar buffer a string\n      bufferOriginal = Buffer.from(imagenDeBBDD.data); // Pasar buffer a formato utf\n\n      imagenDeBBDD.data = bufferOriginal.toString('utf8');\n    } else {\n      Swal.fire({\n        position: 'top',\n        icon: 'error',\n        title: 'Sólo archivos de tipo imagen!',\n        showConfirmButton: false,\n        timer: 2000\n      });\n    }\n\n    return imagenDeBBDD;\n  }\n\n  async queryDepartments() {\n    await DepartmentService.getAll().then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n        this.state.departments = data;\n      } else {\n        console.error('Error web service');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n  }\n\n  async queryRoles() {\n    await RoleService.getAll().then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n        this.state.roles = data;\n      } else {\n        console.error('Error web service');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n  }\n\n  async queryTutors() {\n    await TutorService.getAll().then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n        this.state.tutors = data;\n      } else {\n        console.error('Error web service');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n    return this.state.tutors;\n  }\n\n  async loadDepartments() {\n    await this.queryDepartments();\n    return this.state.departments.map(data => {\n      if (data) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: data.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }\n        }, data.name);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 16\n          }\n        });\n      }\n    });\n  }\n\n  async loadRoles() {\n    await this.queryRoles();\n    return this.state.roles.map(data => {\n      if (data) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: data.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }\n        }, data.name);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 16\n          }\n        });\n      }\n    });\n  }\n\n  async loadTutors() {\n    await this.queryTutors();\n    return this.state.tutors.map(data => {\n      if (data) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: data.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 11\n          }\n        }, data.name);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 16\n          }\n        });\n      }\n    });\n  }\n\n  validateFields(nombre, departamentoId, roleId) {\n    let emptyFields = '';\n    let count = 0;\n\n    if (nombre.replace(/\\s/g, '').length == 0) {\n      emptyFields += ' Nombre ';\n      count++;\n    }\n\n    if (departamentoId == null) {\n      emptyFields += ' Departamento ';\n      count++;\n    }\n\n    if (roleId == null) {\n      emptyFields += ' Rol ';\n      count++;\n    } // If there are errors\n\n\n    if (count > 0) {\n      Swal.fire({\n        position: 'center',\n        icon: 'error',\n        title: (count == 1 ? 'Falta el campo' : 'Faltan los campos: ') + emptyFields,\n        showConfirmButton: false,\n        timer: 2000\n      });\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async addProfessional(datapost) {\n    const {\n      name,\n      departmentId,\n      roleId\n    } = datapost;\n\n    if (this.validateFields(name, departmentId, roleId) == false) {\n      return;\n    }\n\n    await ProfessionalService.create(datapost).then(async res => {\n      if (res.data.success) {\n        await Swal.fire({\n          position: 'top',\n          icon: 'success',\n          title: '¡Enhorabuena, ya tiene perfil!',\n          showConfirmButton: false,\n          timer: 2000\n        });\n        this.state.correctlyCreated = 'true';\n      } else {\n        console.error('Error creating professional');\n      }\n    }).catch(error => {\n      console.error('Error 34 ' + error);\n    });\n    return this.state.correctlyCreated;\n  }\n\n  updateProfessional(datapost) {\n    this.validateFields(datapost.name, datapost.departmentId, datapost.roleId);\n    ProfessionalService.update(datapost).then(res => {\n      if (res.data.success) {\n        Swal.fire({\n          position: 'top',\n          icon: 'success',\n          title: 'Profesional actualizado correctamente!',\n          showConfirmButton: false,\n          timer: 2000\n        });\n      } else {\n        console.error('Error');\n      }\n    }).catch(error => {\n      console.error('Error 34 ' + error);\n    });\n  }\n\n  async readURL(input) {\n    return new Promise(function (resolve, reject) {\n      const miImagen = {};\n\n      if (input.files && input.files[0]) {\n        const myValue = input.files[0];\n\n        if (myValue.type.includes('image')) {\n          const reader = new FileReader();\n          reader.readAsDataURL(myValue);\n\n          reader.onload = event => {\n            miImagen.data = event.target.result;\n            miImagen.name = myValue.name;\n            miImagen.type = myValue.type;\n            resolve(miImagen);\n          };\n\n          reader.onerror = err => {\n            console.error('Error en lectura de imagen --> ' + err);\n            reject(null);\n          };\n        } else {\n          Swal.fire({\n            position: 'top',\n            icon: 'error',\n            title: 'Sólo archivos de tipo imagen!',\n            showConfirmButton: false,\n            timer: 2000\n          });\n          console.error('Error en lectura de imagen');\n          reject(null);\n        }\n      }\n    });\n  }\n\n}\n\nexport default new profileController();","map":{"version":3,"sources":["/Users/trabajo/Desktop/ELRINCON/react-rincon/src/controllers/profileController.js"],"names":["React","Component","ProfessionalService","DepartmentService","TutorService","RoleService","ImageService","ProfileController","Swal","data","profileController","constructor","state","email","sessionStorage","getItem","response","departments","roles","tutors","correctlyCreated","loadUserId","getWithEmail","then","res","console","log","success","redirect","allowCreation","catch","err","error","queryProfessionals","myState","id","name","departmentId","roleId","tutorId","comment","imageId","get","image","cargarImagenDeBBDD","imagenDeBBDD","bufferOriginal","type","includes","Buffer","from","toString","fire","position","icon","title","showConfirmButton","timer","queryDepartments","getAll","queryRoles","queryTutors","loadDepartments","map","loadRoles","loadTutors","validateFields","nombre","departamentoId","emptyFields","count","replace","length","addProfessional","datapost","create","updateProfessional","update","readURL","input","Promise","resolve","reject","miImagen","files","myValue","reader","FileReader","readAsDataURL","onload","event","target","result","onerror"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ProfessionalService from '../services/professional.service';\nimport DepartmentService from '../services/department.service';\nimport TutorService from '../services/tutor.service';\nimport RoleService from '../services/role.service';\nimport ImageService from '../services/image.service';\nimport ProfileController from '../controllers/profileController';\n\nimport Swal from 'sweetalert2';\nimport { data } from 'jquery';\n\nclass profileController {\n  constructor() {\n    this.state = {\n      email: sessionStorage.getItem('userEmail'),\n      response: {},\n      departments: [],\n      roles: [],\n      tutors: [],\n      correctlyCreated: 'false'\n    };\n  }\n\n  async loadUserId() {\n    await ProfessionalService.getWithEmail({ email: this.state.email })\n      .then(res => {\n        console.log(res);\n        if (res.data.success) {\n          this.state.response = { redirect: '/', allowCreation:false };\n        } else {\n          this.state.response = { redirect: null, allowCreation: true };\n        }\n      })\n      .catch(err => {\n        console.error('ERROR server' + err);\n      });\n    return this.state.response;\n  }\n\n  async queryProfessionals() {\n    let myState = {};\n    await ProfessionalService.getWithEmail({ email: this.state.email })\n      .then(async res => {\n        if (res.data.success) {\n          const { id, name, departmentId, roleId, tutorId, comment, imageId } = res.data.data[0];\n\n          myState = {\n            id: id,\n            name: name,\n            departmentId: departmentId,\n            roleId: roleId,\n            tutorId: tutorId,\n            comment: comment,\n            imageId: imageId\n          };\n\n          if (imageId != null) {\n            await ImageService.get(imageId).then(res => {\n              myState.image = this.cargarImagenDeBBDD(res.data.data[0]);\n            }).catch(err => {\n              console.error('ERROR server ' + err);\n            });\n          } else {\n            console.error('No hay imagen asociada a esta cuenta.');\n          }\n        } else {\n          console.error('Error quering professional EDIT');\n        }\n      })\n      .catch(err => {\n        console.error('ERROR server' + err);\n      });\n    return myState;\n  }\n\n  cargarImagenDeBBDD(imagenDeBBDD) {\n    let bufferOriginal = null;\n    if (imagenDeBBDD.type.includes('image')) {\n      // Pasar buffer a string\n      bufferOriginal = Buffer.from(imagenDeBBDD.data);\n      // Pasar buffer a formato utf\n      imagenDeBBDD.data = bufferOriginal.toString('utf8');\n    } else {\n      Swal.fire({\n        position: 'top',\n        icon: 'error',\n        title: 'Sólo archivos de tipo imagen!',\n        showConfirmButton: false,\n        timer: 2000\n      });\n    }\n    return imagenDeBBDD;\n  }\n\n  async queryDepartments() {\n    await DepartmentService.getAll()\n      .then(res => {\n        if (res.data.success) {\n          const data = res.data.data;\n          this.state.departments = data;\n        } else {\n          console.error('Error web service');\n        }\n      })\n      .catch(err => {\n        console.error('ERROR server' + err);\n      });\n  }\n\n  async queryRoles() {\n    await RoleService.getAll()\n      .then(res => {\n        if (res.data.success) {\n          const data = res.data.data;\n          this.state.roles = data;\n        } else {\n          console.error('Error web service');\n        }\n      })\n      .catch(err => {\n        console.error('ERROR server' + err);\n      });\n  }\n\n  async queryTutors() {\n    await TutorService.getAll()\n      .then(res => {\n        if (res.data.success) {\n          const data = res.data.data;\n          this.state.tutors = data;\n        } else {\n          console.error('Error web service');\n        }\n      })\n      .catch(err => {\n        console.error('ERROR server' + err);\n      });\n    return this.state.tutors;\n  }\n\n  async loadDepartments() {\n    await this.queryDepartments();\n    return this.state.departments.map(data => {\n      if (data) {\n        return (\n          <option value={data.id}>{data.name}</option>\n        );\n      } else {\n        return <div />;\n      }\n    });\n  }\n\n  async loadRoles() {\n    await this.queryRoles();\n    return this.state.roles.map(data => {\n      if (data) {\n        return (\n          <option value={data.id}>{data.name}</option>\n        );\n      } else {\n        return <div />;\n      }\n    });\n  }\n\n  async loadTutors() {\n    await this.queryTutors();\n    return this.state.tutors.map(data => {\n      if (data) {\n        return (\n          <option value={data.id}>{data.name}</option>\n        );\n      } else {\n        return <div />;\n      }\n    });\n  }\n\n  validateFields(nombre, departamentoId, roleId) {\n    let emptyFields = '';\n    let count = 0;\n\n    if (nombre.replace(/\\s/g, '').length == 0) {\n      emptyFields += ' Nombre ';\n      count++;\n    }\n    if (departamentoId == null) {\n      emptyFields += ' Departamento ';\n      count++;\n    }\n    if (roleId == null) {\n      emptyFields += ' Rol ';\n      count++;\n    }\n\n    // If there are errors\n    if (count > 0) {\n      Swal.fire({\n        position: 'center',\n        icon: 'error',\n        title: (count == 1 ? 'Falta el campo' : 'Faltan los campos: ') + emptyFields,\n        showConfirmButton: false,\n        timer: 2000\n      });\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async addProfessional(datapost) {\n    const { name, departmentId, roleId } = datapost;\n    if (this.validateFields(name, departmentId, roleId) == false) {\n      return;\n    }\n\n    await ProfessionalService.create(datapost)\n      .then(async res => {\n        if (res.data.success) {\n          await Swal.fire({\n            position: 'top',\n            icon: 'success',\n            title: '¡Enhorabuena, ya tiene perfil!',\n            showConfirmButton: false,\n            timer: 2000\n          });\n          this.state.correctlyCreated = 'true';\n        } else {\n          console.error('Error creating professional');\n        }\n      }).catch(error => {\n        console.error('Error 34 ' + error);\n      });\n\n    return this.state.correctlyCreated;\n  }\n\n  updateProfessional (datapost) {\n    this.validateFields(datapost.name,datapost.departmentId,datapost.roleId);\n\n    ProfessionalService.update(datapost)\n      .then(res => {\n        if (res.data.success) {\n          Swal.fire({\n            position: 'top',\n            icon: 'success',\n            title: 'Profesional actualizado correctamente!',\n            showConfirmButton: false,\n            timer: 2000\n          });\n        } else {\n          console.error('Error');\n        }\n      }).catch(error => {\n        console.error('Error 34 ' + error);\n      });\n  }\n\n  async readURL(input) {\n    return new Promise(function (resolve, reject) {\n      const miImagen = {};\n      if (input.files && input.files[0]) {\n        const myValue = input.files[0];\n\n        if (myValue.type.includes('image')) {\n          const reader = new FileReader();\n          reader.readAsDataURL(myValue);\n\n          reader.onload = (event) => {\n            miImagen.data = event.target.result;\n            miImagen.name = myValue.name;\n            miImagen.type = myValue.type;\n            resolve(miImagen);\n          };\n          reader.onerror = (err) => {\n            console.error('Error en lectura de imagen --> ' + err);\n            reject(null);\n          };\n        } else {\n          Swal.fire({\n            position: 'top',\n            icon: 'error',\n            title: 'Sólo archivos de tipo imagen!',\n            showConfirmButton: false,\n            timer: 2000\n          });\n          console.error('Error en lectura de imagen');\n          reject(null);\n        }\n      }\n    });\n  }\n}\nexport default new profileController();\n"]},"metadata":{},"sourceType":"module"}