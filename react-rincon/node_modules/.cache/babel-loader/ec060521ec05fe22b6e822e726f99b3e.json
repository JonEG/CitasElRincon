{"ast":null,"code":"import ProfessionalService from '../services/professional.service';\nimport DepartmentService from '../services/department.service';\nimport TutorService from '../services/tutor.service';\nimport RoleService from '../services/role.service';\nimport ProfileController from '../controllers/profileController';\nimport Swal from 'sweetalert2';\n\nclass profileController {\n  constructor() {\n    this.state = {\n      email: sessionStorage.getItem(\"userEmail\"),\n      response: {},\n      departments: {}\n    };\n  }\n\n  async loadUserId() {\n    await ProfessionalService.getWithEmail({\n      email: this.state.email\n    }).then(res => {\n      if (res.data.success) {\n        this.state.response = {\n          redirect: \"/\"\n        };\n      } else {\n        this.state.response = {\n          allowCreation: true\n        };\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n    return this.state.response;\n  }\n\n  async queryDepartments() {\n    await DepartmentService.getAll().then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n        this.setState({\n          departments: data\n        });\n      } else {\n        console.error('Error web service');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n    return this.state.departments;\n  }\n\n  queryRoles() {\n    RoleService.getAll().then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n        this.setState({\n          roles: data\n        });\n      } else {\n        console.error('Error web service');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n  }\n\n  queryTutors() {\n    TutorService.getAll().then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n        this.setState({\n          tutors: data\n        });\n      } else {\n        console.error('Error web service');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n  }\n\n}\n\nexport default new profileController();","map":{"version":3,"sources":["/Users/trabajo/Desktop/ELRINCON/react-rincon/src/controllers/profileController.js"],"names":["ProfessionalService","DepartmentService","TutorService","RoleService","ProfileController","Swal","profileController","constructor","state","email","sessionStorage","getItem","response","departments","loadUserId","getWithEmail","then","res","data","success","redirect","allowCreation","catch","err","console","error","queryDepartments","getAll","setState","queryRoles","roles","queryTutors","tutors"],"mappings":"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","sourcesContent":["import ProfessionalService from '../services/professional.service';\nimport DepartmentService from '../services/department.service';\nimport TutorService from '../services/tutor.service';\nimport RoleService from '../services/role.service';\nimport ProfileController from '../controllers/profileController';\n\nimport Swal from 'sweetalert2';\n\nclass profileController{\n    constructor(){\n        this.state = {\n            email: sessionStorage.getItem(\"userEmail\"),\n            response: {},\n            departments:{}\n        }\n    }\n\n    async loadUserId() {\n        await ProfessionalService.getWithEmail({ email: this.state.email })\n            .then(res => {\n                if (res.data.success) {\n                   this.state.response = { redirect: \"/\" };\n                } else {\n                    this.state.response = { allowCreation: true };\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n        return this.state.response;\n    }\n\n    async queryDepartments() {\n        await DepartmentService.getAll()\n            .then(res => {\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.setState({ departments: data });\n                } else {\n                    console.error('Error web service');\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n        return this.state.departments;\n    }\n\n    queryRoles() {\n        RoleService.getAll()\n            .then(res => {\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.setState({ roles: data });\n                } else {\n                    console.error('Error web service');\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n    }\n\n    queryTutors() {\n        TutorService.getAll()\n            .then(res => {\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.setState({ tutors: data });\n                } else {\n                    console.error('Error web service');\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n    }\n\n}\nexport default new profileController();"]},"metadata":{},"sourceType":"module"}