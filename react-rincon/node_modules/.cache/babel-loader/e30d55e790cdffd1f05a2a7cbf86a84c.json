{"ast":null,"code":"import ProfessionalService from '../services/professional.service';\nimport TimetableService from '../services/timetable.service';\nimport Swal from 'sweetalert2';\n\nclass timetableController {\n  constructor() {\n    this.handleChange = async (time, day, dayData) => {\n      if (time == null) return;\n      const filteredTime = await String(time).match(/\\d{2}:\\d{2}/g)[0];\n\n      if (day == \"from\") {\n        dayData.myDateFrom = time;\n        dayData.from = filteredTime;\n      } else if (day == \"to\") {\n        dayData.myDateTo = time;\n        dayData.to = filteredTime;\n      }\n\n      return dayData;\n    };\n\n    this.state = {\n      myUser: null,\n      userId: sessionStorage.getItem(\"userId\"),\n      tableId: null,\n      periodLenght: 30,\n      monday: {\n        myDateFrom: null,\n        from: \"\",\n        myDateTo: null,\n        to: \"\"\n      },\n      tuesday: {\n        myDateFrom: null,\n        from: \"\",\n        myDateTo: null,\n        to: \"\"\n      },\n      wednesday: {\n        myDateFrom: null,\n        from: \"\",\n        myDateTo: null,\n        to: \"\"\n      },\n      thursday: {\n        myDateFrom: null,\n        from: \"\",\n        myDateTo: null,\n        to: \"\"\n      },\n      friday: {\n        myDateFrom: null,\n        from: \"\",\n        myDateTo: null,\n        to: \"\"\n      },\n      mondayDDBB: null,\n      tuesdayDDBB: null,\n      wednesdayDDBB: null,\n      thursdayDDB: null,\n      fridayDDBB: null\n    };\n  }\n\n  async queryTimetable() {\n    await ProfessionalService.get(this.state.userId).then(res => {\n      let week = {};\n\n      if (res.data.success) {\n        this.myUser = res.data.data[0];\n        const {\n          id,\n          monday,\n          tuesday,\n          wednesday,\n          thursday,\n          friday\n        } = this.state.myUser.timetable;\n        this.state.tableId = id;\n\n        if (monday != null) {\n          this.state.mondayDDBB = monday;\n        }\n\n        if (tuesday != null) {\n          this.state.tuesdayDDBB = tuesday;\n        }\n\n        if (wednesday != null) {\n          this.state.wednesdayDDBB = wednesday;\n        }\n\n        if (thursday != null) {\n          this.state.thursdayDDB = thursday;\n        }\n\n        if (friday != null) {\n          this.state.fridayDDBB = friday;\n        }\n\n        return {\n          monday: this.state.mondayDDBB,\n          tuesday: this.state.tuesdayDDBB,\n          wednesday: this.state.wednesdayDDBB,\n          thursday: this.state.thursdayDDB,\n          friday: this.state.fridayDDBB\n        };\n      } else {\n        console.error('Error quering timetable');\n        return null;\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n  }\n\n  async updateTimetable(week, myUser) {\n    let updated = false;\n\n    if (week.id == null) {\n      await TimetableService.create(week).then(res => {\n        myUser.timetableId = res.data.id;\n        ProfessionalService.update(myUser).then(() => {\n          Swal.fire({\n            toast: true,\n            title: \"Horario actualizado\",\n            position: 'top-end',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000\n          });\n          updated = true; //this.setState({ reloadTable: true })\n        }).catch(error => console.error(\"error creating timetable \" + error));\n      }).catch(error => console.error(\"error creating timetable \" + error));\n    } else {\n      await TimetableService.update(week).then(res => {\n        if (res.data.success == true) {\n          //this.setState({ reloadTable: true })\n          Swal.fire({\n            toast: true,\n            title: \"Horario actualizado\",\n            position: 'top-end',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000\n          });\n          updated = true;\n        }\n      }).catch(error => console.error(\"error actualizando timetable \" + error));\n    }\n\n    return updated;\n  }\n\n}\n\nexport default new timetableController();","map":{"version":3,"sources":["/Users/trabajo/Desktop/ELRINCON/react-rincon/src/controllers/timetableController.js"],"names":["ProfessionalService","TimetableService","Swal","timetableController","constructor","handleChange","time","day","dayData","filteredTime","String","match","myDateFrom","from","myDateTo","to","state","myUser","userId","sessionStorage","getItem","tableId","periodLenght","monday","tuesday","wednesday","thursday","friday","mondayDDBB","tuesdayDDBB","wednesdayDDBB","thursdayDDB","fridayDDBB","queryTimetable","get","then","res","week","data","success","id","timetable","console","error","catch","err","updateTimetable","updated","create","timetableId","update","fire","toast","title","position","icon","showConfirmButton","timer"],"mappings":"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","sourcesContent":["import ProfessionalService from '../services/professional.service';\nimport TimetableService from '../services/timetable.service';\nimport Swal from 'sweetalert2';\n\nclass timetableController {\n    constructor() {\n        this.state = {\n            myUser: null,\n            userId: sessionStorage.getItem(\"userId\"),\n            tableId: null,\n            periodLenght: 30,\n            monday: {\n                myDateFrom: null,\n                from: \"\",\n                myDateTo: null,\n                to: \"\"\n            },\n            tuesday: {\n                myDateFrom: null,\n                from: \"\",\n                myDateTo: null,\n                to: \"\"\n            },\n            wednesday: {\n                myDateFrom: null,\n                from: \"\",\n                myDateTo: null,\n                to: \"\"\n            },\n            thursday: {\n                myDateFrom: null,\n                from: \"\",\n                myDateTo: null,\n                to: \"\"\n            },\n            friday: {\n                myDateFrom: null,\n                from: \"\",\n                myDateTo: null,\n                to: \"\"\n            },\n            mondayDDBB: null,\n            tuesdayDDBB: null,\n            wednesdayDDBB: null,\n            thursdayDDB: null,\n            fridayDDBB: null\n        }\n    }\n\n    async queryTimetable() {\n        await ProfessionalService.get(this.state.userId).then(res => {\n            let week = {}\n            if (res.data.success) {\n                this.myUser = res.data.data[0];\n                const { id, monday, tuesday, wednesday, thursday, friday } = (this.state.myUser.timetable);\n                this.state.tableId = id;\n                if (monday != null) {\n                    this.state.mondayDDBB = monday; \n                }\n                if (tuesday != null) {\n                    this.state.tuesdayDDBB = tuesday;\n                }\n                if (wednesday != null) {\n                    this.state.wednesdayDDBB = wednesday;\n                }\n                if (thursday != null) {\n                    this.state.thursdayDDB = thursday;\n                }\n                if (friday != null) {\n                    this.state.fridayDDBB = friday;\n                }\n                return {\n                    monday: this.state.mondayDDBB,\n                    tuesday: this.state.tuesdayDDBB,\n                    wednesday: this.state.wednesdayDDBB,\n                    thursday: this.state.thursdayDDB,\n                    friday: this.state.fridayDDBB\n                }\n            } else {\n                console.error('Error quering timetable');\n                return null;\n            }\n        }).catch(err => {\n            console.error('ERROR server' + err);\n        });\n    }\n\n    handleChange = async (time, day, dayData) => {\n        if (time == null) return;\n        const filteredTime = await String(time).match(/\\d{2}:\\d{2}/g)[0];\n        if (day == \"from\") {\n            dayData.myDateFrom = time;\n            dayData.from = filteredTime;\n        } else if (day == \"to\") {\n            dayData.myDateTo = time;\n            dayData.to = filteredTime;\n        }\n        return dayData;\n    }\n\n    async updateTimetable(week, myUser) {\n        let updated = false;\n        if (week.id == null) {\n            await TimetableService.create(week).then((res) => {\n                myUser.timetableId = res.data.id;\n                ProfessionalService.update(myUser).then(() => {\n                    Swal.fire({\n                        toast: true,\n                        title: \"Horario actualizado\",\n                        position: 'top-end',\n                        icon: 'success',\n                        showConfirmButton: false,\n                        timer: 2000\n                    });\n                    updated = true;\n                    //this.setState({ reloadTable: true })\n                }).catch((error) => console.error(\"error creating timetable \" + error));\n\n            }).catch((error) => console.error(\"error creating timetable \" + error))\n        } else {\n            await TimetableService.update(week).then((res) => {\n                if (res.data.success == true) {\n                    //this.setState({ reloadTable: true })\n                    Swal.fire({\n                        toast: true,\n                        title: \"Horario actualizado\",\n                        position: 'top-end',\n                        icon: 'success',\n                        showConfirmButton: false,\n                        timer: 2000\n                    });\n                    updated = true;\n                }\n            }).catch((error) => console.error(\"error actualizando timetable \" + error));\n        }\n        return updated;\n    }\n\n}\n\nexport default new timetableController();"]},"metadata":{},"sourceType":"module"}