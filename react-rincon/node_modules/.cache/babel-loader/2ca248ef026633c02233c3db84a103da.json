{"ast":null,"code":"var _jsxFileName = \"/Users/trabajo/Desktop/ELRINCON/react-rincon/src/modules/showDates.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport DateService from '../services/date.service';\nimport ProfessionalService from '../services/professional.service';\n\nclass homeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dates: [],\n      id: null,\n      email: sessionStorage.getItem(\"userEmail\")\n    };\n  }\n\n  componentDidMount() {\n    this.loadUserId();\n    this.showTodayDates();\n  }\n\n  loadUserId() {\n    ProfessionalService.getWithEmail({\n      email: this.state.email\n    }).then(res => {\n      if (res.data.success) {\n        const {\n          id,\n          name,\n          departmentId,\n          roleId,\n          tutorId,\n          comment,\n          imageId\n        } = res.data.data[0];\n        this.setState({\n          id: id,\n          name: name,\n          departmentId: departmentId,\n          roleId: roleId,\n          tutorId: tutorId,\n          comment: comment,\n          imageId: imageId\n        });\n\n        if (imageId != null) {\n          ImageService.get(imageId).then(res => {\n            this.setState({\n              image: res.data.data[0]\n            }); //console.log(\"MI IMAGEN \"+JSON.stringify(this.state.image));\n\n            this.cargarImagenDeBBDD(this.state.image);\n          }).catch(err => {\n            console.log('ERROR server ' + err);\n          });\n        } else {\n          console.log('No hay imagen asociada a esta cuenta.');\n        } //this.setState(id,name,departmentId,roleId,tutorId,comment,imageId);\n\n      } else {\n        console.log('Error quering professional EDIT');\n      }\n    }).catch(err => {\n      console.log('ERROR server' + err);\n    });\n  }\n\n  showTodayDates() {\n    DateService.getAll().then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n        this.setState({\n          dates: data\n        });\n      } else {\n        console.error('Error loading dates service');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row my-5 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, \"Fecha\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, \"Hora\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, \"Correo\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, \"Tipo\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, this.loadFillData()))));\n  }\n\n  loadFillData() {\n    return this.state.dates.map(each => {\n      if (each) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }\n        }, each.date), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }\n        }, each.time), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }\n        }, each.email), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }\n        }, each.type));\n      }\n    });\n  }\n\n}\n\nexport default homeComponent;","map":{"version":3,"sources":["/Users/trabajo/Desktop/ELRINCON/react-rincon/src/modules/showDates.js"],"names":["React","DateService","ProfessionalService","homeComponent","Component","constructor","props","state","dates","id","email","sessionStorage","getItem","componentDidMount","loadUserId","showTodayDates","getWithEmail","then","res","data","success","name","departmentId","roleId","tutorId","comment","imageId","setState","ImageService","get","image","cargarImagenDeBBDD","catch","err","console","log","getAll","error","render","loadFillData","map","each","date","time","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,sCAAP;AACA,OAAO,wCAAP;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,EAAE,EAAE,IAFK;AAGTC,MAAAA,KAAK,EAAEC,cAAc,CAACC,OAAf,CAAuB,WAAvB;AAHE,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,UAAL;AACA,SAAKC,cAAL;AACH;;AAEDD,EAAAA,UAAU,GAAE;AACRZ,IAAAA,mBAAmB,CAACc,YAApB,CAAiC;AAAEN,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAApB,KAAjC,EACKO,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb,EAAsB;AAClB,cAAM;AAAEX,UAAAA,EAAF;AAAMY,UAAAA,IAAN;AAAYC,UAAAA,YAAZ;AAA0BC,UAAAA,MAA1B;AAAkCC,UAAAA,OAAlC;AAA2CC,UAAAA,OAA3C;AAAoDC,UAAAA;AAApD,YAAgER,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAc,CAAd,CAAtE;AAEA,aAAKQ,QAAL,CAAc;AACVlB,UAAAA,EAAE,EAAEA,EADM;AAEVY,UAAAA,IAAI,EAAEA,IAFI;AAGVC,UAAAA,YAAY,EAAEA,YAHJ;AAIVC,UAAAA,MAAM,EAAEA,MAJE;AAKVC,UAAAA,OAAO,EAAEA,OALC;AAMVC,UAAAA,OAAO,EAAEA,OANC;AAOVC,UAAAA,OAAO,EAAEA;AAPC,SAAd;;AAUA,YAAIA,OAAO,IAAI,IAAf,EAAqB;AACjBE,UAAAA,YAAY,CAACC,GAAb,CAAiBH,OAAjB,EAA0BT,IAA1B,CAA+BC,GAAG,IAAI;AAClC,iBAAKS,QAAL,CAAc;AAAEG,cAAAA,KAAK,EAAEZ,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAc,CAAd;AAAT,aAAd,EADkC,CAElC;;AACA,iBAAKY,kBAAL,CAAwB,KAAKxB,KAAL,CAAWuB,KAAnC;AAEH,WALD,EAKGE,KALH,CAKSC,GAAG,IAAI;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBF,GAA9B;AACH,WAPD;AAQH,SATD,MASO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AAEH,SAzBiB,CA0BlB;;AACH,OA3BD,MA2BO;AACHD,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH;AACJ,KAhCL,EAiCKH,KAjCL,CAiCWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBF,GAA7B;AACH,KAnCL;AAoCH;;AAEDlB,EAAAA,cAAc,GAAG;AACbd,IAAAA,WAAW,CAACmC,MAAZ,GACKnB,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb,EAAsB;AAClB,cAAMD,IAAI,GAAGD,GAAG,CAACC,IAAJ,CAASA,IAAtB;AACA,aAAKQ,QAAL,CAAc;AAAEnB,UAAAA,KAAK,EAAEW;AAAT,SAAd;AACH,OAHD,MAGO;AACHe,QAAAA,OAAO,CAACG,KAAR,CAAc,6BAAd;AACH;AACJ,KARL,EASKL,KATL,CASWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACG,KAAR,CAAc,iBAAiBJ,GAA/B;AACH,KAXL;AAYH;;AAEDK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,oCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CADJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,YAAL,EADL,CATJ,CADJ,CADJ,CADJ;AAoBH;;AAEDA,EAAAA,YAAY,GAAE;AACV,WAAO,KAAKhC,KAAL,CAAWC,KAAX,CAAiBgC,GAAjB,CAAqBC,IAAI,IAAI;AAChC,UAAIA,IAAJ,EAAU;AACN,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMA,IAAI,CAACC,IAAX,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMD,IAAI,CAACE,IAAX,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMF,IAAI,CAAC/B,KAAX,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM+B,IAAI,CAACG,IAAX,CAJJ,CADJ;AAQH;AACJ,KAXM,CAAP;AAYH;;AA1GuC;;AA6G5C,eAAezC,aAAf","sourcesContent":["import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport DateService from '../services/date.service';\nimport ProfessionalService from '../services/professional.service'\n\nclass homeComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dates: [],\n            id: null,\n            email: sessionStorage.getItem(\"userEmail\")\n        };\n    }\n\n    componentDidMount(){\n        this.loadUserId();\n        this.showTodayDates();\n    }\n\n    loadUserId(){\n        ProfessionalService.getWithEmail({ email: this.state.email })\n            .then(res => {\n                if (res.data.success) {\n                    const { id, name, departmentId, roleId, tutorId, comment, imageId } = res.data.data[0];\n\n                    this.setState({\n                        id: id,\n                        name: name,\n                        departmentId: departmentId,\n                        roleId: roleId,\n                        tutorId: tutorId,\n                        comment: comment,\n                        imageId: imageId\n                    });\n\n                    if (imageId != null) {\n                        ImageService.get(imageId).then(res => {\n                            this.setState({ image: res.data.data[0] });\n                            //console.log(\"MI IMAGEN \"+JSON.stringify(this.state.image));\n                            this.cargarImagenDeBBDD(this.state.image);\n\n                        }).catch(err => {\n                            console.log('ERROR server ' + err);\n                        });\n                    } else {\n                        console.log('No hay imagen asociada a esta cuenta.');\n\n                    }\n                    //this.setState(id,name,departmentId,roleId,tutorId,comment,imageId);\n                } else {\n                    console.log('Error quering professional EDIT');\n                }\n            })\n            .catch(err => {\n                console.log('ERROR server' + err);\n            });\n    }\n\n    showTodayDates() {\n        DateService.getAll()\n            .then(res => {\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.setState({ dates: data });\n                } else {\n                    console.error('Error loading dates service');\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row my-5 mx-3\" >\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Fecha</th>\n                                <th scope=\"col\">Hora</th>\n                                <th scope=\"col\">Correo</th>\n                                <th scope=\"col\">Tipo</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.loadFillData()}\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n\n    loadFillData(){\n        return this.state.dates.map(each => {\n            if (each) {\n                return (\n                    <tr>\n                        <td >{each.date}</td>\n                        <td >{each.time}</td>\n                        <td >{each.email}</td>\n                        <td >{each.type}</td>\n                    </tr>\n                );\n            }\n        });\n    }\n}\n\nexport default homeComponent;"]},"metadata":{},"sourceType":"module"}