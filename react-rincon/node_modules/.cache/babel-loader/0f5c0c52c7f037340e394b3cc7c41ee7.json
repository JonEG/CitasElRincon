{"ast":null,"code":"var _jsxFileName = \"/Users/trabajo/Desktop/ELRINCON/react-rincon/src/modules/createTimetable.js\";\nimport React, { Component, useState } from \"react\";\nimport ProfessionalService from '../services/professional.service';\nimport TimetableService from '../services/timetable.service';\nimport $ from 'jquery';\nimport Swal from 'sweetalert2';\nimport { Redirect } from \"react-router-dom\";\nimport Nav from '../components/nav';\nimport DayTemplate from '../templates/timetableDay';\nimport TimeTableController from '../controllers/timetableController';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = async (time, day) => {};\n\n    this.state = {\n      reloadTable: null,\n      redirect: null,\n      myUser: null,\n      userId: sessionStorage.getItem(\"userId\"),\n      tableId: null,\n      periodLenght: 30,\n      monday: {\n        myDateFrom: null,\n        from: \"\",\n        myDateTo: null,\n        to: \"\"\n      },\n      tuesday: {\n        myDateFrom: null,\n        from: \"\",\n        myDateTo: null,\n        to: \"\"\n      },\n      wednesday: {\n        myDateFrom: null,\n        from: \"\",\n        myDateTo: null,\n        to: \"\"\n      },\n      thursday: {\n        myDateFrom: null,\n        from: \"\",\n        myDateTo: null,\n        to: \"\"\n      },\n      friday: {\n        myDateFrom: null,\n        from: \"\",\n        myDateTo: null,\n        to: \"\"\n      },\n      mondayDDBB: null,\n      tuesdayDDBB: null,\n      wednesdayDDBB: null,\n      thursdayDDB: null,\n      fridayDDBB: null,\n      aux: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.isUserRegistered();\n    this.queryTimetable();\n  }\n\n  isUserRegistered() {\n    if (sessionStorage.getItem('isUserRegistered') == 'false') {\n      this.setState({\n        redirect: '/crear-perfil'\n      });\n    }\n  }\n\n  queryTimetable() {\n    ProfessionalService.get(this.state.userId).then(res => {\n      if (res.data.success) {\n        this.setState({\n          myUser: res.data.data[0]\n        });\n        const {\n          id,\n          monday,\n          tuesday,\n          wednesday,\n          thursday,\n          friday\n        } = this.state.myUser.timetable;\n        this.state.tableId = id;\n\n        if (monday != null) {\n          this.state.mondayDDBB = monday;\n          $('#mondayRow').text(monday);\n        }\n\n        if (tuesday != null) {\n          this.state.tuesdayDDBB = tuesday;\n          $('#tuesdayRow').text(tuesday);\n        }\n\n        if (wednesday != null) {\n          this.state.wednesdayDDBB = wednesday;\n          $('#wednesdayRow').text(wednesday);\n        }\n\n        if (thursday != null) {\n          this.state.thursdayDDB = thursday;\n          $('#thursdayRow').text(thursday);\n        }\n\n        if (friday != null) {\n          this.state.fridayDDBB = friday;\n          $('#fridayRow').text(friday);\n        }\n      } else {\n        console.error('Error quering timetable');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: this.state.redirect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.state.reloadTable) {\n      this.queryTimetable();\n      this.setState({\n        reloadTable: false\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row my-5 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, \"Lunes\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, \"Martes\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }, \"Mi\\xE9rcoles\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }, \"Jueves\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }\n    }, \"Viernes\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      id: \"mondayRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"tuesdayRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"wednesdayRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"thursdayRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"fridayRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }))))), /*#__PURE__*/React.createElement(DayTemplate, {\n      dayName: \"Lunes\",\n      day: this.state.monday,\n      handleChangeFrom: time => this.setState({\n        monday: TimeTableController.handleChange(time, 'mondayFrom')\n      }),\n      handleChangeTo: time => this.setState({\n        monday: TimeTableController.handleChange(time, 'mondayTo')\n      }),\n      myInterval: this.state.periodLenght,\n      onClickAddPeriod: () => this.addPeriod('monday'),\n      onClickEmptyPeriod: () => this.emptyPeriod('monday'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DayTemplate, {\n      dayName: \"Martes\",\n      day: this.state.tuesday,\n      handleChangeFrom: time => this.handleChange(time, 'tuesdayFrom'),\n      handleChangeTo: time => this.handleChange(time, 'tuesdayTo'),\n      myInterval: this.state.periodLenght,\n      onClickAddPeriod: () => this.addPeriod('tuesday'),\n      onClickEmptyPeriod: () => this.emptyPeriod('tuesday'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DayTemplate, {\n      dayName: \"Mi\\xE9rcoles\",\n      day: this.state.wednesday,\n      handleChangeFrom: time => this.handleChange(time, 'wednesdayFrom'),\n      handleChangeTo: time => this.handleChange(time, 'wednesdayTo'),\n      myInterval: this.state.periodLenght,\n      onClickAddPeriod: () => this.addPeriod('wednesday'),\n      onClickEmptyPeriod: () => this.emptyPeriod('wednesday'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DayTemplate, {\n      dayName: \"Jueves\",\n      day: this.state.thursday,\n      handleChangeFrom: time => this.handleChange(time, 'thursdayFrom'),\n      handleChangeTo: time => this.handleChange(time, 'thursdayTo'),\n      myInterval: this.state.periodLenght,\n      onClickAddPeriod: () => this.addPeriod('thursday'),\n      onClickEmptyPeriod: () => this.emptyPeriod('thursday'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DayTemplate, {\n      dayName: \"Viernes\",\n      day: this.state.friday,\n      handleChangeFrom: time => this.handleChange(time, 'fridayFrom'),\n      handleChangeTo: time => this.handleChange(time, 'fridayTo'),\n      myInterval: this.state.periodLenght,\n      onClickAddPeriod: () => this.addPeriod('friday'),\n      onClickEmptyPeriod: () => this.emptyPeriod('friday'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  /*\n  handleChange = async (time, day) => {\n      if (time == null) return;\n       const filteredTime = await String(time).match(/\\d{2}:\\d{2}/g)[0];\n      switch (day) {\n          case \"mondayFrom\":\n              this.state.monday.myDateFrom = time;\n              this.state.monday.from = filteredTime;\n              break;\n          case \"mondayTo\":\n              this.state.monday.myDateTo = time;\n              this.state.monday.to = filteredTime;\n              break;\n          case \"tuesdayFrom\":\n              this.state.tuesday.myDateFrom = time;\n              this.state.tuesday.from = filteredTime;\n              break;\n          case \"tuesdayTo\":\n              this.state.tuesday.myDateTo = time;\n              this.state.tuesday.to = filteredTime;\n              break;\n          case \"wednesdayFrom\":\n              this.state.wednesday.myDateFrom = time;\n              this.state.wednesday.from = filteredTime;\n              break;\n          case \"wednesdayTo\":\n              this.state.wednesday.myDateTo = time;\n              this.state.wednesday.to = filteredTime;\n              break;\n          case \"thursdayFrom\":\n              this.state.thursday.myDateFrom = time;\n              this.state.thursday.from = filteredTime;\n              break;\n          case \"thursdayTo\":\n              this.state.thursday.myDateTo = time;\n              this.state.thursday.to = filteredTime;\n              break;\n          case \"fridayFrom\":\n              this.state.friday.myDateFrom = time;\n              this.state.friday.from = filteredTime;\n              break;\n          case \"fridayTo\":\n              this.state.friday.myDateTo = time;\n              this.state.friday.to = filteredTime;\n              break;\n           default:\n              break;\n      }\n      //This is just to render the changes\n      this.setState({ aux: \":)\" })\n  };*/\n  addPeriod(day) {\n    console.log(\"Ha pulsado añadir \" + day);\n    const week = {\n      id: this.state.tableId,\n      professionalId: this.state.userId,\n      monday: this.state.mondayDDBB,\n      tuesday: this.state.tuesdayDDBB,\n      wednesday: this.state.wednesdayDDBB,\n      thursday: this.state.thursdayDDB,\n      friday: this.state.fridayDDBB\n    };\n\n    switch (day) {\n      case 'monday':\n        if (this.state.monday.from && this.state.monday.to) {\n          week.monday = this.state.monday.from + \"-\" + this.state.monday.to;\n          this.updateTimetable(week);\n        }\n\n        break;\n\n      case 'tuesday':\n        if (this.state.tuesday.from && this.state.tuesday.to) {\n          week.tuesday = this.state.tuesday.from + \"-\" + this.state.tuesday.to;\n          this.updateTimetable(week);\n        }\n\n        break;\n\n      case 'wednesday':\n        if (this.state.wednesday.from && this.state.wednesday.to) {\n          week.wednesday = this.state.wednesday.from + \"-\" + this.state.wednesday.to;\n          this.updateTimetable(week);\n        }\n\n        break;\n\n      case 'thursday':\n        if (this.state.thursday.from && this.state.thursday.to) {\n          week.thursday = this.state.thursday.from + \"-\" + this.state.thursday.to;\n          this.updateTimetable(week);\n        }\n\n        break;\n\n      case 'friday':\n        if (this.state.friday.from && this.state.friday.to) {\n          week.friday = this.state.friday.from + \"-\" + this.state.friday.to;\n          this.updateTimetable(week);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  async emptyPeriod(day) {\n    let aux;\n    const week = {\n      id: this.state.tableId,\n      professionalId: this.state.userId,\n      monday: this.state.mondayDDBB,\n      tuesday: this.state.tuesdayDDBB,\n      wednesday: this.state.wednesdayDDBB,\n      thursday: this.state.thursdayDDB,\n      friday: this.state.fridayDDBB\n    };\n\n    if (this.state.tableId == null) {\n      TimetableService.create({\n        professionalId: this.state.userId,\n        monday: null,\n        tuesday: null,\n        wednesday: null,\n        thursday: null,\n        friday: null\n      }).then(res => {\n        console.log('hehee');\n        this.setState({\n          tableId: res.data.id\n        });\n      }).catch(console.error(\"error creando timetable\"));\n    }\n\n    switch (day) {\n      case 'monday':\n        aux = await this.showConfirmNotification('Lunes');\n\n        if (aux.isConfirmed) {\n          //vaciamos el día\n          week.monday = \"\";\n          this.updateTimetable(week);\n        }\n\n        break;\n\n      case 'tuesday':\n        aux = await this.showConfirmNotification('Martes');\n\n        if (aux.isConfirmed) {\n          //vaciamos el día\n          week.tuesday = \"\";\n          this.updateTimetable(week);\n        }\n\n        break;\n\n      case 'wednesday':\n        aux = await this.showConfirmNotification('Miércoles');\n\n        if (aux.isConfirmed) {\n          //vaciamos el día\n          week.wednesday = \"\";\n          this.updateTimetable(week);\n        }\n\n        break;\n\n      case 'thursday':\n        aux = await this.showConfirmNotification('Jueves');\n\n        if (aux.isConfirmed) {\n          //vaciamos el día\n          week.thursday = \"\";\n          this.updateTimetable(week);\n        }\n\n        break;\n\n      case 'friday':\n        aux = await this.showConfirmNotification('Viernes');\n\n        if (aux.isConfirmed) {\n          //vaciamos el día\n          week.friday = \"\";\n          this.updateTimetable(week);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  async showConfirmNotification(day) {\n    let aux = null;\n    await Swal.fire({\n      title: `Vaciar ${day}`,\n      text: \"¿Desea vaciar el día?\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Cancelar!',\n      confirmButtonText: 'Confirmar'\n    }).then(async res => {\n      if (res.isConfirmed) {\n        await Swal.fire('Eliminado!', 'Se ha vaciado el día.', 'success');\n      }\n\n      aux = res;\n    });\n    return aux;\n  }\n\n  updateTimetable(data) {\n    if (this.state.tableId == null) {\n      TimetableService.create(data).then(res => {\n        this.state.myUser.timetableId = res.data.id;\n        ProfessionalService.update(this.state.myUser).then(() => {\n          Swal.fire({\n            toast: true,\n            title: \"Horario actualizado\",\n            position: 'top-end',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000\n          });\n          this.setState({\n            reloadTable: true\n          });\n        });\n      });\n    } else {\n      TimetableService.update(data).then(res => {\n        if (res.data.success == true) {\n          this.setState({\n            reloadTable: true\n          });\n          Swal.fire({\n            toast: true,\n            title: \"Horario actualizado\",\n            position: 'top-end',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000\n          });\n        }\n      });\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/trabajo/Desktop/ELRINCON/react-rincon/src/modules/createTimetable.js"],"names":["React","Component","useState","ProfessionalService","TimetableService","$","Swal","Redirect","Nav","DayTemplate","TimeTableController","App","constructor","props","handleChange","time","day","state","reloadTable","redirect","myUser","userId","sessionStorage","getItem","tableId","periodLenght","monday","myDateFrom","from","myDateTo","to","tuesday","wednesday","thursday","friday","mondayDDBB","tuesdayDDBB","wednesdayDDBB","thursdayDDB","fridayDDBB","aux","componentDidMount","isUserRegistered","queryTimetable","setState","get","then","res","data","success","id","timetable","text","console","error","catch","err","render","addPeriod","emptyPeriod","log","week","professionalId","updateTimetable","create","showConfirmNotification","isConfirmed","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","timetableId","update","toast","position","showConfirmButton","timer"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport ProfessionalService from '../services/professional.service';\nimport TimetableService from '../services/timetable.service';\nimport $ from 'jquery';\nimport Swal from 'sweetalert2';\nimport { Redirect } from \"react-router-dom\";\n\nimport Nav from '../components/nav';\nimport DayTemplate from '../templates/timetableDay';\nimport TimeTableController from '../controllers/timetableController';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            reloadTable: null,\n            redirect: null,\n            myUser: null,\n            userId: sessionStorage.getItem(\"userId\"),\n            tableId: null,\n            periodLenght: 30,\n            monday: {\n                myDateFrom: null,\n                from: \"\",\n                myDateTo: null,\n                to: \"\"\n            },\n            tuesday: {\n                myDateFrom: null,\n                from: \"\",\n                myDateTo: null,\n                to: \"\"\n            },\n            wednesday: {\n                myDateFrom: null,\n                from: \"\",\n                myDateTo: null,\n                to: \"\"\n            },\n            thursday: {\n                myDateFrom: null,\n                from: \"\",\n                myDateTo: null,\n                to: \"\"\n            },\n            friday: {\n                myDateFrom: null,\n                from: \"\",\n                myDateTo: null,\n                to: \"\"\n            },\n            mondayDDBB: null,\n            tuesdayDDBB: null,\n            wednesdayDDBB: null,\n            thursdayDDB: null,\n            fridayDDBB: null,\n            aux: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.isUserRegistered();\n        this.queryTimetable();\n    }\n\n    isUserRegistered() {\n        if (sessionStorage.getItem('isUserRegistered') == 'false') {\n            this.setState({ redirect: '/crear-perfil' });\n        }\n    }\n\n    queryTimetable() {\n        ProfessionalService.get(this.state.userId).then(res => {\n            if (res.data.success) {\n                this.setState({ myUser: res.data.data[0] });\n                const { id, monday, tuesday, wednesday, thursday, friday } = (this.state.myUser.timetable);\n                this.state.tableId = id;\n                if (monday != null) {\n                    this.state.mondayDDBB = monday;\n                    $('#mondayRow').text(monday);\n                }\n                if (tuesday != null) {\n                    this.state.tuesdayDDBB = tuesday;\n                    $('#tuesdayRow').text(tuesday);\n                }\n                if (wednesday != null) {\n                    this.state.wednesdayDDBB = wednesday;\n                    $('#wednesdayRow').text(wednesday);\n                }\n                if (thursday != null) {\n                    this.state.thursdayDDB = thursday;\n                    $('#thursdayRow').text(thursday);\n                }\n                if (friday != null) {\n                    this.state.fridayDDBB = friday;\n                    $('#fridayRow').text(friday);\n                }\n            } else {\n                console.error('Error quering timetable');\n            }\n        }).catch(err => {\n            console.error('ERROR server' + err);\n        });\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={this.state.redirect} />\n        }\n        if (this.state.reloadTable) {\n            this.queryTimetable();\n            this.setState({ reloadTable: false });\n        }\n        return (\n            <div><Nav />\n                <div className=\"container\">\n                    <div className=\"row my-5 mx-3\" >\n                        <table className=\"table table-bordered table-striped\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Lunes</th>\n                                    <th scope=\"col\">Martes</th>\n                                    <th scope=\"col\">Miércoles</th>\n                                    <th scope=\"col\">Jueves</th>\n                                    <th scope=\"col\">Viernes</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td id=\"mondayRow\"></td>\n                                    <td id=\"tuesdayRow\"></td>\n                                    <td id=\"wednesdayRow\"></td>\n                                    <td id=\"thursdayRow\"></td>\n                                    <td id=\"fridayRow\"></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <DayTemplate\n                        dayName='Lunes'\n                        day={this.state.monday}\n                        handleChangeFrom={time => this.setState({monday: TimeTableController.handleChange(time, 'mondayFrom')})}\n                        handleChangeTo={time => this.setState({monday: TimeTableController.handleChange(time, 'mondayTo')})}\n                        myInterval={this.state.periodLenght}\n                        onClickAddPeriod={() => this.addPeriod('monday')}\n                        onClickEmptyPeriod={() => this.emptyPeriod('monday')}\n                    />\n\n                    <DayTemplate\n                        dayName='Martes'\n                        day={this.state.tuesday}\n                        handleChangeFrom={time => this.handleChange(time, 'tuesdayFrom')}\n                        handleChangeTo={time => this.handleChange(time, 'tuesdayTo')}\n                        myInterval={this.state.periodLenght}\n                        onClickAddPeriod={() => this.addPeriod('tuesday')}\n                        onClickEmptyPeriod={() => this.emptyPeriod('tuesday')}\n                    />\n\n                    <DayTemplate\n                        dayName='Miércoles'\n                        day={this.state.wednesday}\n                        handleChangeFrom={time => this.handleChange(time, 'wednesdayFrom')}\n                        handleChangeTo={time => this.handleChange(time, 'wednesdayTo')}\n                        myInterval={this.state.periodLenght}\n                        onClickAddPeriod={() => this.addPeriod('wednesday')}\n                        onClickEmptyPeriod={() => this.emptyPeriod('wednesday')}\n                    />\n\n                    <DayTemplate\n                        dayName='Jueves'\n                        day={this.state.thursday}\n                        handleChangeFrom={time => this.handleChange(time, 'thursdayFrom')}\n                        handleChangeTo={time => this.handleChange(time, 'thursdayTo')}\n                        myInterval={this.state.periodLenght}\n                        onClickAddPeriod={() => this.addPeriod('thursday')}\n                        onClickEmptyPeriod={() => this.emptyPeriod('thursday')}\n                    />\n\n                    <DayTemplate\n                        dayName='Viernes'\n                        day={this.state.friday}\n                        handleChangeFrom={time => this.handleChange(time, 'fridayFrom')}\n                        handleChangeTo={time => this.handleChange(time, 'fridayTo')}\n                        myInterval={this.state.periodLenght}\n                        onClickAddPeriod={() => this.addPeriod('friday')}\n                        onClickEmptyPeriod={() => this.emptyPeriod('friday')}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    handleChange = async (time, day) => {};\n\n    /*\n    handleChange = async (time, day) => {\n        if (time == null) return;\n\n        const filteredTime = await String(time).match(/\\d{2}:\\d{2}/g)[0];\n        switch (day) {\n            case \"mondayFrom\":\n                this.state.monday.myDateFrom = time;\n                this.state.monday.from = filteredTime;\n                break;\n            case \"mondayTo\":\n                this.state.monday.myDateTo = time;\n                this.state.monday.to = filteredTime;\n                break;\n            case \"tuesdayFrom\":\n                this.state.tuesday.myDateFrom = time;\n                this.state.tuesday.from = filteredTime;\n                break;\n            case \"tuesdayTo\":\n                this.state.tuesday.myDateTo = time;\n                this.state.tuesday.to = filteredTime;\n                break;\n            case \"wednesdayFrom\":\n                this.state.wednesday.myDateFrom = time;\n                this.state.wednesday.from = filteredTime;\n                break;\n            case \"wednesdayTo\":\n                this.state.wednesday.myDateTo = time;\n                this.state.wednesday.to = filteredTime;\n                break;\n            case \"thursdayFrom\":\n                this.state.thursday.myDateFrom = time;\n                this.state.thursday.from = filteredTime;\n                break;\n            case \"thursdayTo\":\n                this.state.thursday.myDateTo = time;\n                this.state.thursday.to = filteredTime;\n                break;\n            case \"fridayFrom\":\n                this.state.friday.myDateFrom = time;\n                this.state.friday.from = filteredTime;\n                break;\n            case \"fridayTo\":\n                this.state.friday.myDateTo = time;\n                this.state.friday.to = filteredTime;\n                break;\n\n            default:\n                break;\n        }\n        //This is just to render the changes\n        this.setState({ aux: \":)\" })\n    };*/\n\n    addPeriod(day) {\n        console.log(\"Ha pulsado añadir \"+day);\n        const week = {\n            id: this.state.tableId,\n            professionalId: this.state.userId,\n            monday: this.state.mondayDDBB,\n            tuesday: this.state.tuesdayDDBB,\n            wednesday: this.state.wednesdayDDBB,\n            thursday: this.state.thursdayDDB,\n            friday: this.state.fridayDDBB\n        }\n\n        switch (day) {\n            case 'monday':\n                if (this.state.monday.from && this.state.monday.to) {\n                    week.monday = this.state.monday.from + \"-\" + this.state.monday.to;\n                    this.updateTimetable(week);\n                }\n                break;\n            case 'tuesday':\n                if (this.state.tuesday.from && this.state.tuesday.to) {\n                    week.tuesday = this.state.tuesday.from + \"-\" + this.state.tuesday.to;\n                    this.updateTimetable(week);\n                }\n                break;\n            case 'wednesday':\n                if (this.state.wednesday.from && this.state.wednesday.to) {\n                    week.wednesday = this.state.wednesday.from + \"-\" + this.state.wednesday.to;\n                    this.updateTimetable(week);\n                }\n                break;\n            case 'thursday':\n                if (this.state.thursday.from && this.state.thursday.to) {\n                    week.thursday = this.state.thursday.from + \"-\" + this.state.thursday.to;\n                    this.updateTimetable(week);\n                }\n                break;\n            case 'friday':\n                if (this.state.friday.from && this.state.friday.to) {\n                    week.friday = this.state.friday.from + \"-\" + this.state.friday.to;\n                    this.updateTimetable(week);\n                }\n                break;\n\n            default:\n                break;\n        }\n\n    }\n\n    async emptyPeriod(day) {\n        let aux;\n        const week = {\n            id: this.state.tableId,\n            professionalId: this.state.userId,\n            monday: this.state.mondayDDBB,\n            tuesday: this.state.tuesdayDDBB,\n            wednesday: this.state.wednesdayDDBB,\n            thursday: this.state.thursdayDDB,\n            friday: this.state.fridayDDBB\n        }\n\n        if (this.state.tableId == null) {\n            TimetableService.create({\n                professionalId: this.state.userId,\n                monday: null,\n                tuesday: null,\n                wednesday: null,\n                thursday: null,\n                friday: null\n            })\n                .then(res => {\n                    console.log('hehee')\n                    this.setState({ tableId: res.data.id });\n                })\n                .catch(\n                    console.error(\"error creando timetable\")\n                );\n        }\n\n        switch (day) {\n            case 'monday':\n                aux = await this.showConfirmNotification('Lunes');\n                if (aux.isConfirmed) {\n                    //vaciamos el día\n                    week.monday = \"\";\n                    this.updateTimetable(week);\n                }\n                break;\n            case 'tuesday':\n                aux = await this.showConfirmNotification('Martes');\n                if (aux.isConfirmed) {\n                    //vaciamos el día\n                    week.tuesday = \"\";\n                    this.updateTimetable(week);\n                }\n                break;\n            case 'wednesday':\n                aux = await this.showConfirmNotification('Miércoles');\n                if (aux.isConfirmed) {\n                    //vaciamos el día\n                    week.wednesday = \"\";\n                    this.updateTimetable(week);\n                }\n                break;\n            case 'thursday':\n                aux = await this.showConfirmNotification('Jueves');\n                if (aux.isConfirmed) {\n                    //vaciamos el día\n                    week.thursday = \"\";\n                    this.updateTimetable(week);\n                }\n                break;\n            case 'friday':\n                aux = await this.showConfirmNotification('Viernes');\n                if (aux.isConfirmed) {\n                    //vaciamos el día\n                    week.friday = \"\";\n                    this.updateTimetable(week);\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    async showConfirmNotification(day) {\n        let aux = null;\n        await Swal.fire({\n            title: `Vaciar ${day}`,\n            text: \"¿Desea vaciar el día?\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            cancelButtonText: 'Cancelar!',\n            confirmButtonText: 'Confirmar'\n        }).then(async (res) => {\n            if (res.isConfirmed) {\n                await Swal.fire(\n                    'Eliminado!',\n                    'Se ha vaciado el día.',\n                    'success'\n                );\n            }\n            aux = res;\n        });\n        return aux;\n    }\n\n    updateTimetable(data) {\n        if (this.state.tableId == null) {\n            TimetableService.create(data).then((res) => {\n                this.state.myUser.timetableId = res.data.id;\n                ProfessionalService.update(this.state.myUser).then(() => {\n                    Swal.fire({\n                        toast: true,\n                        title: \"Horario actualizado\",\n                        position: 'top-end',\n                        icon: 'success',\n                        showConfirmButton: false,\n                        timer: 2000\n                    });\n                    this.setState({ reloadTable: true })\n                });\n\n            })\n        } else {\n            TimetableService.update(data).then((res) => {\n                if (res.data.success == true) {\n                    this.setState({ reloadTable: true })\n                    Swal.fire({\n                        toast: true,\n                        title: \"Horario actualizado\",\n                        position: 'top-end',\n                        icon: 'success',\n                        showConfirmButton: false,\n                        timer: 2000\n                    });\n                }\n            });\n        }\n\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}