{"ast":null,"code":"var _jsxFileName = \"/Users/trabajo/Desktop/ELRINCON/react-rincon/src/controllers/profileController.js\";\nimport React, { Component } from 'react';\nimport ProfessionalService from '../services/professional.service';\nimport DepartmentService from '../services/department.service';\nimport TutorService from '../services/tutor.service';\nimport RoleService from '../services/role.service';\nimport ProfileController from '../controllers/profileController';\nimport Swal from 'sweetalert2';\n\nclass profileController {\n  constructor() {\n    this.state = {\n      email: sessionStorage.getItem(\"userEmail\"),\n      response: {},\n      departments: {},\n      roles: {},\n      tutors: {},\n      correctlyCreated: null\n    };\n  }\n\n  async loadUserId() {\n    await ProfessionalService.getWithEmail({\n      email: this.state.email\n    }).then(res => {\n      if (res.data.success) {\n        this.state.response = {\n          redirect: \"/\"\n        };\n      } else {\n        this.state.response = {\n          allowCreation: true\n        };\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n    return this.state.response;\n  }\n\n  async queryDepartments() {\n    await DepartmentService.getAll().then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n        this.state.departments = data;\n      } else {\n        console.error('Error web service');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    }); //console.log(this.state.departments);\n  }\n\n  async queryRoles() {\n    await RoleService.getAll().then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n        this.state.roles = data;\n      } else {\n        console.error('Error web service');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    }); //console.log(this.state.roles);\n  }\n\n  async queryTutors() {\n    await TutorService.getAll().then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n        this.state.tutors = data;\n      } else {\n        console.error('Error web service');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    }); //console.log(this.state.tutors);\n\n    return this.state.tutors;\n  }\n\n  async loadDepartments() {\n    await this.queryDepartments();\n    return this.state.departments.map(data => {\n      if (data) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: data.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }\n        }, data.name);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 24\n          }\n        });\n      }\n    });\n  }\n\n  async loadRoles() {\n    await this.queryRoles();\n    return this.state.roles.map(data => {\n      if (data) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: data.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        }, data.name);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 24\n          }\n        });\n      }\n    });\n  }\n\n  async loadTutors() {\n    await this.queryTutors();\n    return this.state.tutors.map(data => {\n      if (data) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: data.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }\n        }, data.name);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 24\n          }\n        });\n      }\n    });\n  }\n\n  validateFields(nombre, departamentoId, roleId) {\n    let emptyFields = \"\";\n    let count = 0;\n\n    if (nombre.replace(/\\s/g, \"\").length == 0) {\n      emptyFields += \" Nombre \";\n      count++;\n    }\n\n    if (departamentoId == null) {\n      emptyFields += \" Departamento \";\n      count++;\n    }\n\n    if (roleId == null) {\n      emptyFields += \" Rol \";\n      count++;\n    } //If there are errors\n\n\n    if (count > 0) {\n      Swal.fire({\n        position: 'center',\n        icon: 'error',\n        title: (count == 1 ? \"Falta el campo\" : \"Faltan los campos: \") + emptyFields,\n        showConfirmButton: false,\n        timer: 2000\n      });\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async addProfessional(datapost) {\n    const {\n      name,\n      departmentId,\n      roleId\n    } = datapost;\n\n    if (this.validateFields(name, departmentId, roleId) == false) {\n      return;\n    }\n\n    await ProfessionalService.create(datapost).then(async res => {\n      if (res.data.success) {\n        await Swal.fire({\n          position: 'top',\n          icon: 'success',\n          title: 'Â¡Enhorabuena, ya tiene perfil!',\n          showConfirmButton: false,\n          timer: 2000\n        });\n        this.state.correctlyCreated = \"true\";\n      } else {\n        console.error(\"Error creating professional\");\n      }\n    }).catch(error => {\n      console.error(\"Error 34 \" + error);\n    });\n    return this.state.correctlyCreated;\n  }\n\n}\n\nexport default new profileController();","map":{"version":3,"sources":["/Users/trabajo/Desktop/ELRINCON/react-rincon/src/controllers/profileController.js"],"names":["React","Component","ProfessionalService","DepartmentService","TutorService","RoleService","ProfileController","Swal","profileController","constructor","state","email","sessionStorage","getItem","response","departments","roles","tutors","correctlyCreated","loadUserId","getWithEmail","then","res","data","success","redirect","allowCreation","catch","err","console","error","queryDepartments","getAll","queryRoles","queryTutors","loadDepartments","map","id","name","loadRoles","loadTutors","validateFields","nombre","departamentoId","roleId","emptyFields","count","replace","length","fire","position","icon","title","showConfirmButton","timer","addProfessional","datapost","departmentId","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ProfessionalService from '../services/professional.service';\nimport DepartmentService from '../services/department.service';\nimport TutorService from '../services/tutor.service';\nimport RoleService from '../services/role.service';\nimport ProfileController from '../controllers/profileController';\n\nimport Swal from 'sweetalert2';\n\nclass profileController {\n    constructor() {\n        this.state = {\n            email: sessionStorage.getItem(\"userEmail\"),\n            response: {},\n            departments: {},\n            roles: {},\n            tutors: {},\n            correctlyCreated:null\n        }\n    }\n\n    async loadUserId() {\n        await ProfessionalService.getWithEmail({ email: this.state.email })\n            .then(res => {\n                if (res.data.success) {\n                    this.state.response = { redirect: \"/\" };\n                } else {\n                    this.state.response = { allowCreation: true };\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n        return this.state.response;\n    }\n\n    async queryDepartments() {\n        await DepartmentService.getAll()\n            .then(res => {\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.state.departments = data;\n                } else {\n                    console.error('Error web service');\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n        //console.log(this.state.departments);\n    }\n\n    async queryRoles() {\n        await RoleService.getAll()\n            .then(res => {\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.state.roles = data;\n                } else {\n                    console.error('Error web service');\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n        //console.log(this.state.roles);\n    }\n\n    async queryTutors() {\n        await TutorService.getAll()\n            .then(res => {\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.state.tutors = data;\n                } else {\n                    console.error('Error web service');\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n        //console.log(this.state.tutors);\n        return this.state.tutors;\n    }\n\n    async loadDepartments() {\n        await this.queryDepartments();\n        return this.state.departments.map(data => {\n            if (data) {\n                return (\n                    <option value={data.id}>{data.name}</option>\n                );\n            } else {\n                return <div></div>;\n            }\n        });\n    }\n\n    async loadRoles() {\n        await this.queryRoles();\n        return this.state.roles.map(data => {\n            if (data) {\n                return (\n                    <option value={data.id}>{data.name}</option>\n                );\n            } else {\n                return <div></div>;\n            }\n        });\n    }\n\n    async loadTutors() {\n        await this.queryTutors();\n        return this.state.tutors.map(data => {\n            if (data) {\n                return (\n                    <option value={data.id}>{data.name}</option>\n                );\n            } else {\n                return <div></div>;\n            }\n        });\n    }\n\n    validateFields(nombre,departamentoId,roleId) {\n        let emptyFields = \"\";\n        let count = 0;\n\n        if (nombre.replace(/\\s/g, \"\").length == 0) {\n            emptyFields += \" Nombre \";\n            count++;\n        }\n        if (departamentoId== null) {\n            emptyFields += \" Departamento \";\n            count++;\n        }\n        if (roleId == null) {\n            emptyFields += \" Rol \";\n            count++;\n        }\n\n        //If there are errors\n        if (count > 0) {\n            Swal.fire({\n                position: 'center',\n                icon: 'error',\n                title: (count == 1 ? \"Falta el campo\" : \"Faltan los campos: \") + emptyFields,\n                showConfirmButton: false,\n                timer: 2000\n            })\n            return false;\n        } else {\n            return true;\n        }\n\n    }\n\n    async addProfessional(datapost) {\n        const {name,departmentId,roleId} = datapost;\n        if (this.validateFields(name,departmentId,roleId) == false) {\n            return;\n        }\n\n        await ProfessionalService.create(datapost)\n            .then(async res => {\n                if (res.data.success) {\n                    await Swal.fire({\n                        position: 'top',\n                        icon: 'success',\n                        title: 'Â¡Enhorabuena, ya tiene perfil!',\n                        showConfirmButton: false,\n                        timer: 2000\n                    })\n                    this.state.correctlyCreated= \"true\" ;\n                }\n                else {\n                    console.error(\"Error creating professional\");\n                }\n            }).catch(error => {\n                console.error(\"Error 34 \" + error);\n            });\n\n        return this.state.correctlyCreated;\n    }\n\n}\nexport default new profileController();"]},"metadata":{},"sourceType":"module"}