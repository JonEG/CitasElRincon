{"ast":null,"code":"var _jsxFileName = \"/Users/trabajo/Desktop/ELRINCON/react-rincon/src/modules/showDates.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport DateService from '../services/date.service';\nimport ProfessionalService from '../services/professional.service';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass homeComponent extends React.Component {\n  constructor(props) {\n    super(props); //We add addDays to DATE \n\n    Date.prototype.addDays = function (days) {\n      var date = new Date(this.valueOf());\n      date.setDate(date.getDate() + days);\n      return date;\n    };\n\n    this.state = {\n      dates: [],\n      id: sessionStorage.getItem(\"userId\"),\n      email: sessionStorage.getItem(\"userEmail\"),\n      startDate: new Date(),\n      endDate: new Date().addDays(7),\n      daysToQuery: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadUserId();\n    this.showTodayDates();\n  }\n\n  async loadUserId() {\n    await ProfessionalService.getWithEmail({\n      email: this.state.email\n    }).then(res => {\n      if (res.data.success) {\n        const {\n          id\n        } = res.data.data[0];\n        sessionStorage[\"userId\"] = id;\n      } else {\n        console.error('Error loading Id');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n  }\n\n  async showTodayDates() {\n    const myDates = [];\n    const info = await this.state.daysToQuery.map(each => {\n      DateService.getDates({\n        id: this.state.id\n      }, {\n        day: each\n      }).then(res => {\n        if (res.data.success) {\n          const data = res.data.data;\n          myDates.push({\n            dates: data\n          });\n        } else {\n          console.error('Error loading dates service');\n        }\n      }).catch(err => {\n        console.error('ERROR server' + err);\n      });\n    });\n    this.setState({\n      dates: myDates\n    });\n  }\n\n  async setStartDate(date) {\n    await this.setState({\n      startDate: date\n    });\n    console.log(\"start: \" + this.state.startDate);\n    console.log(\"end: \" + this.state.endDate);\n    this.setState({\n      daysToQuery: this.getDaysToQuery()\n    });\n    console.log(\"DAYS: \" + this.state.daysToQuery);\n  }\n\n  async setEndDate(date) {\n    await this.setState({\n      endDate: date\n    });\n    console.log(\"start: \" + this.state.startDate);\n    console.log(\"end: \" + this.state.endDate);\n    this.setState({\n      daysToQuery: this.getDaysToQuery()\n    });\n    console.log(\"DAYS: \" + this.state.daysToQuery);\n  }\n\n  filterDate(day) {\n    return day.getFullYear() + \"/\" + day.getMonth() + \"/\" + day.getDate();\n  }\n\n  getDaysToQuery() {\n    let days = [];\n    let eachDay = new Date(this.state.startDate.getTime());\n    let i = 1;\n    const finalDay = new Date(this.state.endDate.getTime());\n\n    while (eachDay.getTime() <= finalDay) {\n      days.push(this.filterDate(eachDay));\n      eachDay = new Date(this.state.startDate.getTime()).addDays(i);\n      i++;\n    }\n\n    return days;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-hover table-borderless table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"table-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 41\n      }\n    }, \"Desde: \")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      dateFormat: \"dd/MM/yyyy\",\n      selected: this.state.startDate,\n      onChange: date => this.setStartDate(date),\n      selectsStart: true,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      minDate: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"table-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 41\n      }\n    }, \"Hasta: \")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      dateFormat: \"dd/MM/yyyy\",\n      selected: this.state.endDate,\n      onChange: date => this.setEndDate(date),\n      selectsEnd: true,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      minDate: this.state.startDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    }))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row my-5 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, \"Pr\\xF3ximas citas\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row my-5 mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    }, \"Fecha\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }, \"Hora\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, \"Correo\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }, \"Tipo\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }, this.loadFillData()))));\n  }\n\n  loadFillData() {\n    return this.state.dates.map(each => {\n      if (each) {\n        //console.log(each);\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }\n        }, each.date), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }\n        }, each.time), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }\n        }, each.email), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }\n        }, each.dateType.name));\n      }\n    });\n  }\n\n}\n\nexport default homeComponent;","map":{"version":3,"sources":["/Users/trabajo/Desktop/ELRINCON/react-rincon/src/modules/showDates.js"],"names":["React","DateService","ProfessionalService","DatePicker","homeComponent","Component","constructor","props","Date","prototype","addDays","days","date","valueOf","setDate","getDate","state","dates","id","sessionStorage","getItem","email","startDate","endDate","daysToQuery","componentDidMount","loadUserId","showTodayDates","getWithEmail","then","res","data","success","console","error","catch","err","myDates","info","map","each","getDates","day","push","setState","setStartDate","log","getDaysToQuery","setEndDate","filterDate","getFullYear","getMonth","eachDay","getTime","i","finalDay","render","loadFillData","time","dateType","name"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport DateService from '../services/date.service';\nimport ProfessionalService from '../services/professional.service'\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass homeComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        //We add addDays to DATE \n        Date.prototype.addDays = function(days) {\n            var date = new Date(this.valueOf());\n            date.setDate(date.getDate() + days);\n            return date;\n        }\n\n        this.state = {\n            dates: [],\n            id: sessionStorage.getItem(\"userId\"),\n            email: sessionStorage.getItem(\"userEmail\"),\n            startDate: new Date(),\n            endDate: new Date().addDays(7),\n            daysToQuery : []\n        };\n    }\n\n    componentDidMount() {\n        this.loadUserId();\n        this.showTodayDates();\n    }\n\n    async loadUserId() {\n        await ProfessionalService.getWithEmail({ email: this.state.email })\n            .then(res => {\n                if (res.data.success) {\n                    const { id } = res.data.data[0];\n                    sessionStorage[\"userId\"] = id;\n                } else {\n                    console.error('Error loading Id');\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n    }\n\n    async showTodayDates() {\n        const myDates = [];\n        const info = await this.state.daysToQuery.map((each) => {\n\n            DateService.getDates({ id: this.state.id },{day: each})\n            .then(res => {\n                if (res.data.success) {\n                    const data = res.data.data;\n                    myDates.push({ dates: data });\n                } else {\n                    console.error('Error loading dates service');\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n\n        })\n\n        this.setState({dates : myDates});\n    }\n\n    async setStartDate(date){\n        await this.setState({startDate :date});\n        console.log(\"start: \"+this.state.startDate);\n        console.log(\"end: \"+this.state.endDate);\n        this.setState({daysToQuery: this.getDaysToQuery()});\n        console.log(\"DAYS: \"+this.state.daysToQuery);\n    }\n\n    async setEndDate(date){\n        await this.setState({endDate :date});\n        console.log(\"start: \"+this.state.startDate);\n        console.log(\"end: \"+this.state.endDate);\n        this.setState({daysToQuery: this.getDaysToQuery()});\n        console.log(\"DAYS: \"+this.state.daysToQuery);\n    }\n\n    filterDate(day){\n        return day.getFullYear()+\"/\"+day.getMonth()+\"/\"+day.getDate();\n    }\n\n    getDaysToQuery(){\n        let days = [];\n        let eachDay = new Date(this.state.startDate.getTime());\n        let i=1;\n        const finalDay = new Date(this.state.endDate.getTime());\n        while(eachDay.getTime()<= finalDay){\n            days.push(this.filterDate(eachDay));\n            eachDay = new Date(this.state.startDate.getTime()).addDays(i);\n            i++;\n        }\n        return days;\n    }\n\n    render() {\n        return (\n            <div className=\"container p-4\">\n                <div className=\"row float-right\">\n                    <div className=\"col-sm\">\n                        <table className=\"table table-hover table-borderless table-sm\">\n                            <tbody>\n                                <tr className=\"table-info\">\n                                    <td><strong>Desde: </strong></td>\n                                    <td>\n                                        <DatePicker\n                                            dateFormat=\"dd/MM/yyyy\"\n                                            selected={this.state.startDate}\n                                            onChange={date => this.setStartDate(date)}\n                                            selectsStart\n                                            startDate={this.state.startDate}\n                                            endDate={this.state.endDate}\n                                            minDate={new Date()}\n                                        />\n                                    </td>\n                                </tr>\n                                <tr className=\"table-info\">\n                                    <td><strong>Hasta: </strong></td>\n                                    <td>\n                                        <DatePicker\n                                            dateFormat=\"dd/MM/yyyy\"\n                                            selected={this.state.endDate}\n                                            onChange={date => this.setEndDate(date)}\n                                            selectsEnd\n                                            startDate={this.state.startDate}\n                                            endDate={this.state.endDate}\n                                            minDate={this.state.startDate}\n                                        />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                <div className=\"row my-5 mx-3\">\n                    <div className=\"d-flex justify-content-center\">\n                        <h2>Próximas citas</h2>\n                    </div>\n                </div>\n                <div className=\"row my-5 mx-3\">\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Fecha</th>\n                                <th scope=\"col\">Hora</th>\n                                <th scope=\"col\">Correo</th>\n                                <th scope=\"col\">Tipo</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.loadFillData()}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n\n    loadFillData() {\n        return this.state.dates.map(each => {\n            if (each) {\n                //console.log(each);\n                return (\n                    <tr>\n                        <td >{each.date}</td>\n                        <td >{each.time}</td>\n                        <td >{each.email}</td>\n                        <td >{each.dateType.name}</td>\n                    </tr>\n                );\n            }\n        });\n    }\n}\n\nexport default homeComponent;"]},"metadata":{},"sourceType":"module"}