{"ast":null,"code":"import ProfessionalService from '../services/professional.service';\nimport DepartmentService from '../services/department.service';\nimport TutorService from '../services/tutor.service';\nimport RoleService from '../services/role.service';\nimport ProfileController from '../controllers/profileController';\nimport Swal from 'sweetalert2';\n\nclass profileController {\n  constructor() {\n    this.state = {\n      email: sessionStorage.getItem(\"userEmail\"),\n      response: {},\n      departments: {},\n      roles: {},\n      tutors: {}\n    };\n  }\n\n  async loadUserId() {\n    await ProfessionalService.getWithEmail({\n      email: this.state.email\n    }).then(res => {\n      if (res.data.success) {\n        this.state.response = {\n          redirect: \"/\"\n        };\n      } else {\n        this.state.response = {\n          allowCreation: true\n        };\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n    return this.state.response;\n  }\n\n  async queryDepartments() {\n    await DepartmentService.getAll().then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n        this.state.departments = data;\n      } else {\n        console.error('Error web service');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n    return this.state.departments;\n  }\n\n  async queryRoles() {\n    await RoleService.getAll().then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n        this.setState({\n          roles: data\n        });\n      } else {\n        console.error('Error web service');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n    return this.state.roles;\n  }\n\n  async queryTutors() {\n    await TutorService.getAll().then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n        this.setState({\n          tutors: data\n        });\n      } else {\n        console.error('Error web service');\n      }\n    }).catch(err => {\n      console.error('ERROR server' + err);\n    });\n    return this.state.tutors;\n  }\n\n}\n\nexport default new profileController();","map":{"version":3,"sources":["/Users/trabajo/Desktop/ELRINCON/react-rincon/src/controllers/profileController.js"],"names":["ProfessionalService","DepartmentService","TutorService","RoleService","ProfileController","Swal","profileController","constructor","state","email","sessionStorage","getItem","response","departments","roles","tutors","loadUserId","getWithEmail","then","res","data","success","redirect","allowCreation","catch","err","console","error","queryDepartments","getAll","queryRoles","setState","queryTutors"],"mappings":"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","sourcesContent":["import ProfessionalService from '../services/professional.service';\nimport DepartmentService from '../services/department.service';\nimport TutorService from '../services/tutor.service';\nimport RoleService from '../services/role.service';\nimport ProfileController from '../controllers/profileController';\n\nimport Swal from 'sweetalert2';\n\nclass profileController{\n    constructor(){\n        this.state = {\n            email: sessionStorage.getItem(\"userEmail\"),\n            response: {},\n            departments:{},\n            roles:{},\n            tutors:{}\n        }\n    }\n\n    async loadUserId() {\n        await ProfessionalService.getWithEmail({ email: this.state.email })\n            .then(res => {\n                if (res.data.success) {\n                   this.state.response = { redirect: \"/\" };\n                } else {\n                    this.state.response = { allowCreation: true };\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n        return this.state.response;\n    }\n\n    async queryDepartments() {\n        await DepartmentService.getAll()\n            .then(res => {\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.state.departments= data;\n                } else {\n                    console.error('Error web service');\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n        return this.state.departments;\n    }\n\n    async queryRoles() {\n        await RoleService.getAll()\n            .then(res => {\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.setState({ roles: data });\n                } else {\n                    console.error('Error web service');\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n            return this.state.roles;\n    }\n\n    async queryTutors() {\n        await TutorService.getAll()\n            .then(res => {\n                if (res.data.success) {\n                    const data = res.data.data;\n                    this.setState({ tutors: data });\n                } else {\n                    console.error('Error web service');\n                }\n            })\n            .catch(err => {\n                console.error('ERROR server' + err);\n            });\n        return this.state.tutors;\n    }\n\n}\nexport default new profileController();"]},"metadata":{},"sourceType":"module"}